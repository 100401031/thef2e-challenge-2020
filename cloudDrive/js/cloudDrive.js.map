{"version":3,"sources":["cloudDrive/js/cloudDrive.js"],"names":["vm","Vue","el","data","sidebarDropdownVisible","fileNavDropdownVisible","storage_size","storage_usage","searchInput","searchResult","dataStorage","rootFolder","id","name","editable","modifiedTime","size","ownerId","fileType","fileList","childrenFolder","isStar","path","trash","currentSection","star","computed","starFileId","lastSection","folderNav","length","this","slice","currentFolder","concat","preFolderNav","splice","newArray","newDisplayfolderNav","dragoverItem","newFolderName","fileDropdownVisible","displayfolderNav","searchFilter","watch","storeUsagePercentage","handler","newVal","oldVal","preventRecord","result","push","editableFolder","$nextTick","_this","removeClass","$","addClass","_this2","_this3","folder","filter","item","toLowerCase","includes","searchFile","forEach","filterStarFile","_this4","e","elName","getAttribute","handleListItemDblClick","handleNavToFolder","target","targetIndex","findIndex","createFolder","arguments","undefined","_creatUuid","Date","getTime","handleClickOutside","newFolder","dragStart","dragEnd","isDraggingItem","targetElem","drop","saveToLocalStorage","srcItem","targetItem","moveDriveFile","dataTransfer","files","uploadByInput","dragOver","handleUploadFile","file","targetFolder","_this5","i","_ret","receiveFile","dragLeave","type","alert","v","then","fileName","newFile","fileId","checkFileType","saveToLocal","JSON","stringify","localStorage","catch","err","_loop","_typeof","indexOfItem","indexInList","indexOf","lastModified","convertFile","Promise","resolve","reject","reader","console","log","onerror","error","readAsDataURL","stringData","setItem","download","decodeData","a","rightClickItem","parse","getItem","href","setAttribute","click","activeUploadInput","$refs","fileInput","delFile","delFileIndex","saveToLocalTrash","onload","removeItem","split","current","pathArray","find","_loop2","createElement","indexOfDelItem","d","now","performance","isInTrash","replace","c","floor","r","toString","fileContextMenu","addStar","findObj","deleteFile","obj","index","starPage","starFile","storeData","trashData","filters","timeFormat","timestamp","childFolder","year","date","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","bytes","decimals","Math","pow","toFixed","dm","created","random","getStoreData","getTrashData","mounted","directives","bind","binding","vnode","clickOutsideEvent","event","expression","document","body","addEventListener","unbind","contextMenu","selector","items","upload","callback","sizeFormat","createNewFolder","sizes","modal","moveToTrash","recycle","recycleItem"],"mappings":"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","file":"cloudDrive.js","sourcesContent":["var vm;\nvm = new Vue({\n  el: '#app',\n  data: {\n    sidebarDropdownVisible: false,\n    fileNavDropdownVisible: false,\n    storage_size: 5000000,\n    storage_usage: 0,\n    searchInput: '',\n    searchResult: [],\n    dataStorage: {\n      rootFolder: {\n        id: 'root',\n        name: '我的雲端硬碟',\n        editable: true,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: [\n          {\n            id: '#1-f',\n            name: 'Hello World!',\n            editable: true,\n            isStar: false,\n            modifiedTime: 1598047432044,\n            size: '',\n            ownerId: 'me',\n            fileType: 'folder',\n            childrenFolder: [],\n            fileList: [],\n            path: '/root'\n          }\n        ],\n        path: ''\n      },\n      trash: {\n        id: 'trash',\n        name: '垃圾桶',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: []\n      },\n      star: {\n        id: 'star',\n        name: '已加星號',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: []\n      }\n    },\n    starFileId: [],\n    lastSection: null,\n    currentSection: null,\n    currentFolder: null,\n    preFolderNav: [],\n    folderNav: [],\n    preventRecord: false,\n    dragoverItem: null,\n    rightClickItem: null,\n    isDraggingItem: null,\n    newFolderName: '新文件夾',\n    fileDropdownVisible: false\n  },\n  computed: {\n    displayfolderNav() {\n      if (this.folderNav.length > 3) {\n        const newArray = this.folderNav.slice(1, -1);\n        const newDisplayfolderNav = [].concat(this.folderNav);\n        newDisplayfolderNav.splice(1, this.folderNav.length - 2, newArray);\n        return newDisplayfolderNav;\n      } else {\n        return this.folderNav;\n      }\n    },\n    storeUsagePercentage() {\n      return (this.storage_usage / this.storage_size) * 100;\n    },\n    displayFileList() {\n      return this.currentFolder.fileList;\n    },\n    searchFilter() {\n      if (this.searchInput != '') {\n        const result = this.searchFile(this.dataStorage.rootFolder, this.searchInput);\n        return result;\n      } else return [];\n    }\n  },\n  watch: {\n    currentFolder: {\n      handler(newVal, oldVal) {\n        if (oldVal && !this.preventRecord) {\n          if (\n            newVal.id == 'root' ||\n            newVal.id == 'trash' ||\n            newVal.id == 'search' ||\n            newVal.id == 'star'\n          ) {\n            this.folderNav = [];\n            this.folderNav.push(newVal);\n          } else {\n            //將資料夾路徑紀錄至folderNav\n            this.folderNav.push(newVal);\n          }\n          if (newVal.editable) {\n            this.editableFolder = true;\n          } else {\n            this.editableFolder = false;\n          }\n        }\n        if (\n          newVal.id == 'root' ||\n          newVal.id == 'trash' ||\n          newVal.id == 'search' ||\n          newVal.id == 'star'\n        ) {\n          if (oldVal) {\n            this.lastSection = this.currentSection;\n          }\n          this.currentSection = newVal.id;\n        }\n        this.$nextTick(() => {\n          if (this.lastSection) {\n            $('.table_wrapper').removeClass(this.lastSection);\n          }\n          $('.table_wrapper').addClass(this.currentSection);\n        });\n      }\n    },\n    dragoverItem() {\n      //TODO: 目前class被改動就會影響到contextmenu的判斷，應將contextmenu改為vue內data驅動\n      this.$nextTick(() => {\n        if (this.lastSection) {\n          $('.table_wrapper').removeClass(this.lastSection);\n        }\n        $('.table_wrapper').addClass(this.currentSection);\n      });\n    },\n    searchFilter(newVal) {\n      const result = {\n        id: 'search',\n        name: '搜尋結果',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: newVal,\n        path: ''\n      };\n      this.currentFolder = result;\n      if (this.searchInput == '') {\n        this.currentFolder = this.dataStorage.rootFolder;\n      }\n    }\n  },\n  methods: {\n    searchFile(folder, searchInput) {\n      const filter = folder.fileList.filter(item =>\n        item.name.toLowerCase().includes(searchInput.toLowerCase())\n      );\n      const result = [...filter];\n      const childrenFolder = folder.fileList.filter(item => item.fileType == 'folder');\n      //是否有下一層\n      if (childrenFolder.length > 0) {\n        childrenFolder.forEach(item => {\n          //回傳結果再push進result\n          this.searchFile(item, searchInput).forEach(item => {\n            result.push(item);\n          });\n        });\n      }\n      return result;\n    },\n    filterStarFile(folder) {\n      const filter = folder.fileList.filter(item => item.isStar === true);\n      const result = [...filter];\n      const childrenFolder = folder.fileList.filter(item => item.fileType == 'folder');\n      //是否有下一層\n      if (childrenFolder.length > 0) {\n        childrenFolder.forEach(item => {\n          //回傳結果再push進result\n          this.filterStarFile(item).forEach(item => {\n            result.push(item);\n          });\n        });\n      }\n      return result;\n    },\n    handleClickOutside(e, el) {\n      const elName = el.getAttribute('el-name');\n      this[`${elName}Visible`] = false;\n    },\n    handleListItemDblClick(item) {\n      if (item.isInTrash) return;\n      if (item.fileType === 'folder') {\n        this.currentFolder = item;\n      } else {\n        //TODO 待新增檔案預覽功能\n      }\n    },\n    handleNavToFolder(target) {\n      if (target === this.currentFolder) return;\n      //找到物件nav index 刪除它後面紀錄\n      const targetIndex = this.folderNav.findIndex(item => item.id == target.id);\n      this.folderNav.splice(targetIndex);\n      //防止watch時把此動作記錄下來\n      this.preventRecord = true;\n      this.currentFolder = target;\n      this.preventRecord = false;\n    },\n    createFolder(name = '新文件夾') {\n      this.sidebarDropdownVisible = false;\n      const newFolder = {\n        id: this._creatUuid(),\n        name,\n        editable: true,\n        isStar: false,\n        modifiedTime: new Date().getTime(),\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: [],\n        path: this.currentFolder.path + '/' + this.currentFolder.id\n      };\n      this.currentFolder.fileList.push(newFolder);\n      //save to local\n      this.saveToLocalStorage();\n      this.newFolderName = '新文件夾';\n    },\n    //拖曳開始，設定目前拖曳中元素\n    dragStart(e, item) {\n      if (!this.currentFolder.editable) return;\n      this.isDraggingItem = item;\n      $('.table_wrapper').addClass('draggedTable');\n    },\n\n    //拖曳結束，清除拖曳及目標元素\n    dragEnd(e, item) {\n      this.isDraggingItem = null;\n      this.dragoverItem = null;\n      $('.table_wrapper').removeClass('draggedTable');\n    },\n    //設定目前拖曳目標\n    dragOver(targetElem) {\n      if (!this.currentFolder.editable) return;\n      if (\n        !this.dragoverItem &&\n        !targetElem.fileList.includes(this.isDraggingItem) &&\n        targetElem != this.isDraggingItem\n      ) {\n        this.dragoverItem = targetElem;\n      }\n    },\n    //若拖曳離開目前目標元素，則將目標元素設定為null\n    dragLeave() {\n      if (!this.currentFolder.editable) return;\n      this.dragoverItem = null;\n    },\n    //拖曳檔案被移動至目標元素中\n    drop(e, targetElem) {\n      if (!this.currentFolder.editable) return;\n      let srcItem = this.isDraggingItem;\n      let targetItem = this.dragoverItem;\n      //判斷是否為Drive上既有檔案，若true則進行搬移\n      if (srcItem) {\n        //若拖曳檔案與目標檔案相同則return\n        if (srcItem == targetItem || !targetItem) return;\n        else this.moveDriveFile(srcItem, targetItem);\n        targetItem = null;\n        return;\n      }\n      //判斷是否為Drive上既有檔案，若false則將檔案存至local並將檔案資訊加入隸屬檔案夾物件\n      this.handleUploadFile(e.dataTransfer.files, targetElem);\n      this.dragoverItem = null;\n    },\n    uploadByInput(e) {\n      if (!this.currentFolder.editable) return;\n      this.handleUploadFile(e.target.files, this.currentFolder);\n      this.sidebarDropdownVisible = false;\n    },\n    //處理上傳檔案\n    handleUploadFile(file, targetFolder) {\n      for (let i = 0; i < file.length; i++) {\n        const receiveFile = file[i];\n        if (receiveFile.type == '') {\n          alert(`「${receiveFile.name}」格式錯誤，目前暫不支援上傳此種格式。`);\n          return;\n        }\n        if (receiveFile.size > 3890704) {\n          alert(\n            `「${receiveFile.name}」檔案太大囉，由於是存入localStorage，建議測試檔案小於3.8MB。`\n          );\n          return;\n        }\n        this.convertFile(receiveFile)\n          .then(data => {\n            const fileId = this._creatUuid();\n            const fileName = receiveFile.name;\n            const newFile = {\n              id: fileId,\n              name: fileName,\n              isStar: false,\n              modifiedTime: receiveFile.lastModified,\n              size: receiveFile.size,\n              ownerId: 'me',\n              fileType: this.checkFileType(receiveFile.type),\n              path: this.currentFolder.path + '/' + this.currentFolder.id\n            };\n            targetFolder.fileList.push(newFile);\n            this.saveToLocal(data, fileId, fileName);\n            this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n            //save to local\n            this.saveToLocalStorage();\n          })\n          .catch(err => {\n            console.log('err', err);\n          });\n      }\n    },\n    //Drive檔案搬移\n    moveDriveFile(srcItem, targetItem) {\n      if (srcItem.fileType != 'folder' && targetItem.fileType == 'folder') {\n        const indexOfItem = this.currentFolder.fileList.indexOf(srcItem);\n        targetItem.fileList.push(srcItem);\n        this.currentFolder.fileList.splice(indexOfItem, 1);\n        //save to local\n        this.saveToLocalStorage();\n      } else if (srcItem.fileType == 'folder' && targetItem.fileType == 'folder') {\n        const indexInList = this.currentFolder.fileList.indexOf(srcItem);\n        //加入\n        targetItem.fileList.push(srcItem);\n        //移出\n        this.currentFolder.fileList.splice(indexInList, 1);\n        //save to local\n        this.saveToLocalStorage();\n      }\n    },\n    checkFileType(fileType) {\n      console.log(fileType);\n      if (fileType.includes('mp4')) return 'mp4';\n      if (fileType.includes('image')) return 'image';\n      if (\n        fileType.includes('msword') ||\n        fileType.includes('application/vnd.openxmlformats-officedocument.wordprocessingml.document')\n      )\n        return 'msword';\n      if (fileType.includes('pdf')) return 'pdf';\n      else return 'default';\n    },\n    convertFile(file) {\n      return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result);\n        };\n        reader.onerror = () => {\n          reject(reader.error);\n        };\n        reader.readAsDataURL(file);\n      });\n    },\n    saveToLocal(data, fileId, fileName) {\n      const newFile = { data, fileId, fileName };\n      const stringData = JSON.stringify(newFile);\n      localStorage.setItem(fileId, stringData);\n    },\n    download(item = this.rightClickItem) {\n      if (this.currentSection == 'trash') return;\n      if (item.fileType == 'folder') return;\n      const decodeData = JSON.parse(localStorage.getItem(item.id));\n      var a = document.createElement('a');\n      a.href = decodeData.data;\n      a.setAttribute('download', item.name);\n      a.click();\n    },\n    activeUploadInput() {\n      if (this.currentSection != 'root') {\n        this.currentFolder = this.dataStorage.rootFolder;\n      }\n      this.$refs.fileInput.click();\n    },\n    moveToTrash(file = this.rightClickItem) {\n      if (this.currentSection == 'trash') return;\n      file.isInTrash = true;\n      this.dataStorage.trash.fileList.push(file);\n      const delFile = this.currentFolder.fileList.find(item => item.id == file.id);\n      const delFileIndex = this.currentFolder.fileList.indexOf(delFile);\n      this.currentFolder.fileList.splice(delFileIndex, 1);\n      //save to local\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n    },\n    deleteFile(file = this.rightClickItem) {\n      const delFileIndex = this.dataStorage.trash.fileList.indexOf(file);\n      this.dataStorage.trash.fileList.splice(delFileIndex, 1);\n      localStorage.removeItem(file.id);\n      this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n      //save to local\n      this.saveToLocalTrash();\n    },\n    recycleItem(item = this.rightClickItem) {\n      if (this.currentSection != 'trash') return;\n      ///讀取path\n      const pathArray = item.path.split('/');\n      //刪除根目錄及前方空白\n      pathArray.splice(0, 2);\n      var targetFolder;\n      if (pathArray.length == 0) {\n        //檔案於根目錄\n        targetFolder = this.dataStorage.rootFolder;\n      } else {\n        //檔案於子目錄\n        var current = this.dataStorage.rootFolder;\n        for (let i = 0; i < pathArray.length; i++) {\n          const childFolder = current.fileList.find(item => item.id == pathArray[i]);\n          current = childFolder;\n        }\n        targetFolder = current;\n      }\n      item.isInTrash = false;\n      targetFolder.fileList.push(item);\n      const indexOfDelItem = this.dataStorage.trash.fileList.indexOf(item);\n      this.dataStorage.trash.fileList.splice(indexOfDelItem, 1);\n      //save to local\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n    },\n    _creatUuid() {\n      var d = Date.now();\n      if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now(); //use high-precision timer if available\n      }\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n      });\n    },\n    fileContextMenu(item) {\n      this.rightClickItem = item;\n    },\n    addStar(item = this.rightClickItem) {\n      item.isStar = !item.isStar;\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n      if (item.isStar) {\n        this.dataStorage.star.fileList.push(item);\n      } else {\n        const target = this.dataStorage.star.fileList;\n        const findObj = target.find(obj => obj.id == item.id);\n        const index = target.indexOf(findObj);\n        target.splice(index, 1);\n      }\n    },\n    starPage() {\n      const starFile = this.filterStarFile(this.dataStorage.rootFolder);\n      this.dataStorage.star.fileList = starFile;\n      this.currentFolder = this.dataStorage.star;\n    },\n    saveToLocalStorage() {\n      //save to LocalStorage\n      const storeData = JSON.stringify(this.dataStorage.rootFolder.fileList);\n      localStorage.setItem('myStorage', storeData);\n    },\n    saveToLocalTrash() {\n      //save to Local Trash\n      const trashData = JSON.stringify(this.dataStorage.trash.fileList);\n      localStorage.setItem('myTrash', trashData);\n    }\n  },\n  filters: {\n    timeFormat(timestamp) {\n      let date = new Date(timestamp);\n      let year = date.getFullYear();\n      let month = date.getMonth() + 1;\n      let day = date.getDate();\n      let hours = '0' + date.getHours();\n      let minutes = '0' + date.getMinutes();\n      let seconds = '0' + date.getSeconds();\n      return `${year}-${month}-${day} ${hours.substr(-2)}:${minutes.substr(-2)}:${seconds.substr(\n        -2\n      )}`;\n    },\n    sizeFormat(bytes, decimals = 1) {\n      if (isNaN(bytes) || !bytes) return '';\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const dm = decimals < 0 ? 0 : decimals;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n  },\n  created() {\n    this.currentFolder = this.dataStorage.rootFolder;\n    this.folderNav.push(this.dataStorage.rootFolder);\n    this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n    const starFile = this.filterStarFile(this.dataStorage.rootFolder);\n    this.dataStorage.star.fileList = starFile;\n    const getStoreData = JSON.parse(localStorage.getItem('myStorage')) || [\n      {\n        id: '#1-f',\n        name: 'Hello World!',\n        editable: true,\n        isStar: false,\n        modifiedTime: 1598047432044,\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        childrenFolder: [],\n        fileList: [],\n        path: '/root'\n      }\n    ];\n    const getTrashData = JSON.parse(localStorage.getItem('myTrash')) || [];\n    this.dataStorage.rootFolder.fileList = getStoreData;\n    this.dataStorage.trash.fileList = getTrashData;\n  },\n  mounted() {},\n  directives: {\n    'click-outside': {\n      bind: function (el, binding, vnode) {\n        el.clickOutsideEvent = function (event) {\n          const elName = el.getAttribute('el-name');\n          if (\n            !(el == event.target || el.contains(event.target)) &&\n            elName != event.target.getAttribute('bind-el')\n          ) {\n            vnode.context[binding.expression](event, el);\n          }\n        };\n        document.body.addEventListener('click', el.clickOutsideEvent);\n        document.body.addEventListener('contextmenu', el.clickOutsideEvent);\n      },\n      unbind: function (el) {\n        document.body.removeEventListener('click', el.clickOutsideEvent);\n        document.body.removeEventListener('contextmenu', el.clickOutsideEvent);\n      }\n    }\n  }\n});\n\n//雲端硬碟 右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root',\n    items: {\n      upload: {\n        name: '上傳檔案',\n        callback() {\n          vm.activeUploadInput();\n        }\n      },\n      createNewFolder: {\n        name: '新增資料夾',\n        callback() {\n          $('#newFolderModal').modal('show');\n        }\n      }\n    }\n  });\n});\n\n//檔案夾右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root .folder_type',\n    items: {\n      // share: { name: '共享' },\n      // download: {\n      //   name: '下載',\n      //   callback() {\n      //     vm.download();\n      //   }\n      // },\n      star: {\n        name: '標示星號',\n        callback() {\n          vm.addStar();\n        }\n      },\n      moveToTrash: {\n        name: '移至垃圾桶',\n        callback() {\n          vm.moveToTrash();\n        }\n      }\n    }\n  });\n});\n//檔案右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root .doc_type',\n    items: {\n      download: {\n        name: '下載',\n        callback() {\n          vm.download();\n        }\n      },\n      star: {\n        name: '標示星號',\n        callback() {\n          vm.addStar();\n        }\n      },\n      moveToTrash: {\n        name: '移至垃圾桶',\n        callback() {\n          vm.moveToTrash();\n        }\n      }\n    }\n  });\n});\n\n//垃圾桶檔案及檔案夾右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.trash .doc_type , .table_contextmenu.trash .folder_type',\n    items: {\n      recycle: {\n        name: '還原',\n        callback() {\n          vm.recycleItem();\n        }\n      },\n      delete: {\n        name: '永久刪除',\n        callback() {\n          $('#deleteModal').modal('show');\n        }\n      }\n    }\n  });\n});\n"]}