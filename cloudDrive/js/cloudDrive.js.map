{"version":3,"sources":["cloudDrive/js/cloudDrive.js"],"names":["vm","Vue","el","data","fileNavDropdownVisible","storage_size","sidebarDropdownVisible","storage_usage","searchInput","searchResult","dataStorage","rootFolder","id","name","editable","modifiedTime","size","ownerId","fileType","fileList","isStar","path","trash","star","starFileId","lastSection","currentSection","currentFolder","preFolderNav","folderNav","preventRecord","dragoverItem","rightClickItem","isDraggingItem","fileDropdownVisible","displayfolderNav","computed","this","length","slice","newDisplayfolderNav","concat","newArray","storeUsagePercentage","displayFileList","searchFilter","searchFile","watch","newVal","oldVal","_this","push","editableFolder","$nextTick","$","removeClass","addClass","_this2","result","methods","folder","_this3","filter","item","includes","childrenFolder","forEach","_this4","filterStarFile","elName","getAttribute","handleListItemDblClick","isInTrash","handleNavToFolder","target","targetIndex","findIndex","splice","createFolder","arguments","undefined","Date","getTime","newFolder","dragStart","e","_creatUuid","dragOver","targetElem","saveToLocalStorage","newFolderName","dragLeave","dragEnd","srcItem","targetItem","moveDriveFile","dataTransfer","files","drop","handleUploadFile","file","targetFolder","_this5","i","receiveFile","type","alert","v","then","fileId","newFile","fileName","lastModified","checkFileType","saveToLocal","JSON","stringify","localStorage","catch","err","indexOfItem","indexOf","indexInList","console","log","convertFile","Promise","resolve","reject","reader","onerror","stringData","download","parse","getItem","href","a","setAttribute","click","activeUploadInput","FileReader","fileInput","moveToTrash","delFile","find","readAsDataURL","delFileIndex","recycleItem","pathArray","createElement","current","_loop2","indexOfDelItem","saveToLocalTrash","d","now","performance","c","removeItem","r","toString","addStar","index","findObj","starPage","storeData","setItem","trashData","timestamp","year","getFullYear","month","date","getMonth","day","hours","getHours","minutes","getMinutes","getSeconds","substr","seconds","sizeFormat","bytes","decimals","isNaN","Math","floor","parseFloat","pow","toFixed","dm","created","starFile","getStoreData","getTrashData","mounted","click-outside","bind","binding","event","contains","timeFormat","expression","document","body","addEventListener","clickOutsideEvent","unbind","removeEventListener","contextMenu","selector","items","callback","createNewFolder","modal","vnode","upload","recycle","delete"],"mappings":"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","file":"cloudDrive.js","sourcesContent":["var vm;\nvm = new Vue({\n  el: '#app',\n  data: {\n    sidebarDropdownVisible: false,\n    fileNavDropdownVisible: false,\n    storage_size: 5000000,\n    storage_usage: 0,\n    searchInput: '',\n    searchResult: [],\n    dataStorage: {\n      rootFolder: {\n        id: 'root',\n        name: '我的雲端硬碟',\n        editable: true,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: [\n          {\n            id: '#1-f',\n            name: 'Hello World!',\n            editable: true,\n            isStar: false,\n            modifiedTime: 1598047432044,\n            size: '',\n            ownerId: 'me',\n            fileType: 'folder',\n            childrenFolder: [],\n            fileList: [],\n            path: '/root'\n          }\n        ],\n        path: ''\n      },\n      trash: {\n        id: 'trash',\n        name: '垃圾桶',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: []\n      },\n      star: {\n        id: 'star',\n        name: '已加星號',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: []\n      }\n    },\n    starFileId: [],\n    lastSection: null,\n    currentSection: null,\n    currentFolder: null,\n    preFolderNav: [],\n    folderNav: [],\n    preventRecord: false,\n    dragoverItem: null,\n    rightClickItem: null,\n    isDraggingItem: null,\n    newFolderName: '新文件夾',\n    fileDropdownVisible: false\n  },\n  computed: {\n    displayfolderNav() {\n      if (this.folderNav.length > 3) {\n        const newArray = this.folderNav.slice(1, -1);\n        const newDisplayfolderNav = [].concat(this.folderNav);\n        newDisplayfolderNav.splice(1, this.folderNav.length - 2, newArray);\n        return newDisplayfolderNav;\n      } else {\n        return this.folderNav;\n      }\n    },\n    storeUsagePercentage() {\n      return (this.storage_usage / this.storage_size) * 100;\n    },\n    displayFileList() {\n      return this.currentFolder.fileList;\n    },\n    searchFilter() {\n      if (this.searchInput != '') {\n        const result = this.searchFile(this.dataStorage.rootFolder, this.searchInput);\n        return result;\n      } else return [];\n    }\n  },\n  watch: {\n    currentFolder: {\n      handler(newVal, oldVal) {\n        if (oldVal && !this.preventRecord) {\n          if (\n            newVal.id == 'root' ||\n            newVal.id == 'trash' ||\n            newVal.id == 'search' ||\n            newVal.id == 'star'\n          ) {\n            this.folderNav = [];\n            this.folderNav.push(newVal);\n          } else {\n            //將資料夾路徑紀錄至folderNav\n            this.folderNav.push(newVal);\n          }\n          if (newVal.editable) {\n            this.editableFolder = true;\n          } else {\n            this.editableFolder = false;\n          }\n        }\n        if (\n          newVal.id == 'root' ||\n          newVal.id == 'trash' ||\n          newVal.id == 'search' ||\n          newVal.id == 'star'\n        ) {\n          if (oldVal) {\n            this.lastSection = this.currentSection;\n          }\n          this.currentSection = newVal.id;\n        }\n        this.$nextTick(() => {\n          if (this.lastSection) {\n            $('.table_wrapper').removeClass(this.lastSection);\n          }\n          $('.table_wrapper').addClass(this.currentSection);\n        });\n      }\n    },\n    dragoverItem() {\n      //TODO: 目前class被改動就會影響到contextmenu的判斷，應將contextmenu改為vue內data驅動\n      this.$nextTick(() => {\n        if (this.lastSection) {\n          $('.table_wrapper').removeClass(this.lastSection);\n        }\n        $('.table_wrapper').addClass(this.currentSection);\n      });\n    },\n    searchFilter(newVal) {\n      const result = {\n        id: 'search',\n        name: '搜尋結果',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: newVal,\n        path: ''\n      };\n      this.currentFolder = result;\n      if (this.searchInput == '') {\n        this.currentFolder = this.dataStorage.rootFolder;\n      }\n    }\n  },\n  methods: {\n    searchFile(folder, searchInput) {\n      const result = [];\n      const filter = folder.fileList.filter(item => item.name.includes(searchInput));\n      filter.forEach(item => {\n        result.push(item);\n      });\n      const childrenFolder = folder.fileList.filter(item => item.fileType == 'folder');\n      //是否有下一層\n      if (childrenFolder.length > 0) {\n        childrenFolder.forEach(item => {\n          //回傳結果再push進result\n          this.searchFile(item, searchInput).forEach(item => {\n            result.push(item);\n          });\n        });\n      }\n      return result;\n    },\n    filterStarFile(folder) {\n      const result = [];\n      const filter = folder.fileList.filter(item => item.isStar === true);\n      filter.forEach(item => {\n        result.push(item);\n      });\n      const childrenFolder = folder.fileList.filter(item => item.fileType == 'folder');\n      //是否有下一層\n      if (childrenFolder.length > 0) {\n        childrenFolder.forEach(item => {\n          //回傳結果再push進result\n          this.filterStarFile(item).forEach(item => {\n            result.push(item);\n          });\n        });\n      }\n      return result;\n    },\n    handleClickOutside(e, el) {\n      const elName = el.getAttribute('el-name');\n      this[`${elName}Visible`] = false;\n    },\n    handleListItemDblClick(item) {\n      if (item.isInTrash) return;\n      if (item.fileType === 'folder') {\n        this.currentFolder = item;\n      } else {\n        //TODO 待新增檔案預覽功能\n      }\n    },\n    handleNavToFolder(target) {\n      if (target === this.currentFolder) return;\n      //找到物件nav index 刪除它後面紀錄\n      const targetIndex = this.folderNav.findIndex(item => item.id == target.id);\n      this.folderNav.splice(targetIndex);\n      //防止watch時把此動作記錄下來\n      this.preventRecord = true;\n      this.currentFolder = target;\n      this.preventRecord = false;\n    },\n    createFolder(name = '新文件夾') {\n      this.sidebarDropdownVisible = false;\n      const newFolder = {\n        id: this._creatUuid(),\n        name,\n        editable: true,\n        isStar: false,\n        modifiedTime: new Date().getTime(),\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: [],\n        path: this.currentFolder.path + '/' + this.currentFolder.id\n      };\n      this.currentFolder.fileList.push(newFolder);\n      //save to local\n      this.saveToLocalStorage();\n      this.newFolderName = '新文件夾';\n    },\n    //拖曳開始，設定目前拖曳中元素\n    dragStart(e, item) {\n      if (!this.currentFolder.editable) return;\n      this.isDraggingItem = item;\n      $('.table_wrapper').addClass('draggedTable');\n    },\n\n    //拖曳結束，清除拖曳及目標元素\n    dragEnd(e, item) {\n      this.isDraggingItem = null;\n      this.dragoverItem = null;\n      $('.table_wrapper').removeClass('draggedTable');\n    },\n    //設定目前拖曳目標\n    dragOver(targetElem) {\n      if (!this.currentFolder.editable) return;\n      if (\n        !this.dragoverItem &&\n        !targetElem.fileList.includes(this.isDraggingItem) &&\n        targetElem != this.isDraggingItem\n      ) {\n        this.dragoverItem = targetElem;\n      }\n    },\n    //若拖曳離開目前目標元素，則將目標元素設定為null\n    dragLeave() {\n      if (!this.currentFolder.editable) return;\n      this.dragoverItem = null;\n    },\n    //拖曳檔案被移動至目標元素中\n    drop(e, targetElem) {\n      if (!this.currentFolder.editable) return;\n      let srcItem = this.isDraggingItem;\n      let targetItem = this.dragoverItem;\n      //判斷是否為Drive上既有檔案，若true則進行搬移\n      if (srcItem) {\n        //若拖曳檔案與目標檔案相同則return\n        if (srcItem == targetItem || !targetItem) return;\n        else this.moveDriveFile(srcItem, targetItem);\n        targetItem = null;\n        return;\n      }\n      //判斷是否為Drive上既有檔案，若false則將檔案存至local並將檔案資訊加入隸屬檔案夾物件\n      this.handleUploadFile(e.dataTransfer.files, targetElem);\n      this.dragoverItem = null;\n    },\n    uploadByInput(e) {\n      if (!this.currentFolder.editable) return;\n      this.handleUploadFile(e.target.files, this.currentFolder);\n      this.sidebarDropdownVisible = false;\n    },\n    //處理上傳檔案\n    handleUploadFile(file, targetFolder) {\n      for (let i = 0; i < file.length; i++) {\n        const receiveFile = file[i];\n        if (receiveFile.type == '') {\n          alert(`「${receiveFile.name}」格式錯誤，目前暫不支援上傳此種格式。`);\n          return;\n        }\n        if (receiveFile.size > 3890704) {\n          alert(\n            `「${receiveFile.name}」檔案太大囉，由於是存入localStorage，建議測試檔案小於3.8MB。`\n          );\n          return;\n        }\n        this.convertFile(receiveFile)\n          .then(data => {\n            const fileId = this._creatUuid();\n            const fileName = receiveFile.name;\n            const newFile = {\n              id: fileId,\n              name: fileName,\n              isStar: false,\n              modifiedTime: receiveFile.lastModified,\n              size: receiveFile.size,\n              ownerId: 'me',\n              fileType: this.checkFileType(receiveFile.type),\n              path: this.currentFolder.path + '/' + this.currentFolder.id\n            };\n            targetFolder.fileList.push(newFile);\n            this.saveToLocal(data, fileId, fileName);\n            this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n            //save to local\n            this.saveToLocalStorage();\n          })\n          .catch(err => {\n            console.log('err', err);\n          });\n      }\n    },\n    //Drive檔案搬移\n    moveDriveFile(srcItem, targetItem) {\n      if (srcItem.fileType != 'folder' && targetItem.fileType == 'folder') {\n        const indexOfItem = this.currentFolder.fileList.indexOf(srcItem);\n        targetItem.fileList.push(srcItem);\n        this.currentFolder.fileList.splice(indexOfItem, 1);\n        //save to local\n        this.saveToLocalStorage();\n      } else if (srcItem.fileType == 'folder' && targetItem.fileType == 'folder') {\n        const indexInList = this.currentFolder.fileList.indexOf(srcItem);\n        //加入\n        targetItem.fileList.push(srcItem);\n        //移出\n        this.currentFolder.fileList.splice(indexInList, 1);\n        //save to local\n        this.saveToLocalStorage();\n      }\n    },\n    checkFileType(fileType) {\n      console.log(fileType);\n      if (fileType.includes('mp4')) return 'mp4';\n      if (fileType.includes('image')) return 'image';\n      if (\n        fileType.includes('msword') ||\n        fileType.includes('application/vnd.openxmlformats-officedocument.wordprocessingml.document')\n      )\n        return 'msword';\n      if (fileType.includes('pdf')) return 'pdf';\n      else return 'default';\n    },\n    convertFile(file) {\n      return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result);\n        };\n        reader.onerror = () => {\n          reject(reader.error);\n        };\n        reader.readAsDataURL(file);\n      });\n    },\n    saveToLocal(data, fileId, fileName) {\n      const newFile = { data, fileId, fileName };\n      const stringData = JSON.stringify(newFile);\n      localStorage.setItem(fileId, stringData);\n    },\n    download(item = this.rightClickItem) {\n      if (this.currentSection == 'trash') return;\n      if (item.fileType == 'folder') return;\n      const decodeData = JSON.parse(localStorage.getItem(item.id));\n      var a = document.createElement('a');\n      a.href = decodeData.data;\n      a.setAttribute('download', item.name);\n      a.click();\n    },\n    activeUploadInput() {\n      if (this.currentSection != 'root') {\n        this.currentFolder = this.dataStorage.rootFolder;\n      }\n      this.$refs.fileInput.click();\n    },\n    moveToTrash(file = this.rightClickItem) {\n      if (this.currentSection == 'trash') return;\n      file.isInTrash = true;\n      this.dataStorage.trash.fileList.push(file);\n      const delFile = this.currentFolder.fileList.find(item => item.id == file.id);\n      const delFileIndex = this.currentFolder.fileList.indexOf(delFile);\n      this.currentFolder.fileList.splice(delFileIndex, 1);\n      //save to local\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n    },\n    deleteFile(file = this.rightClickItem) {\n      const delFileIndex = this.dataStorage.trash.fileList.indexOf(file);\n      this.dataStorage.trash.fileList.splice(delFileIndex, 1);\n      localStorage.removeItem(file.id);\n      this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n      //save to local\n      this.saveToLocalTrash();\n    },\n    recycleItem(item = this.rightClickItem) {\n      if (this.currentSection != 'trash') return;\n      ///讀取path\n      const pathArray = item.path.split('/');\n      //刪除根目錄及前方空白\n      pathArray.splice(0, 2);\n      var targetFolder;\n      if (pathArray.length == 0) {\n        //檔案於根目錄\n        targetFolder = this.dataStorage.rootFolder;\n      } else {\n        //檔案於子目錄\n        var current = this.dataStorage.rootFolder;\n        for (let i = 0; i < pathArray.length; i++) {\n          const childFolder = current.fileList.find(item => item.id == pathArray[i]);\n          current = childFolder;\n        }\n        targetFolder = current;\n      }\n      item.isInTrash = false;\n      targetFolder.fileList.push(item);\n      const indexOfDelItem = this.dataStorage.trash.fileList.indexOf(item);\n      this.dataStorage.trash.fileList.splice(indexOfDelItem, 1);\n      //save to local\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n    },\n    _creatUuid() {\n      var d = Date.now();\n      if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now(); //use high-precision timer if available\n      }\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n      });\n    },\n    fileContextMenu(item) {\n      this.rightClickItem = item;\n    },\n    addStar(item = this.rightClickItem) {\n      item.isStar = !item.isStar;\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n      if (item.isStar) {\n        this.dataStorage.star.fileList.push(item);\n      } else {\n        const target = this.dataStorage.star.fileList;\n        const findObj = target.find(obj => obj.id == item.id);\n        const index = target.indexOf(findObj);\n        target.splice(index, 1);\n      }\n    },\n    starPage() {\n      this.currentFolder = this.dataStorage.star;\n    },\n    saveToLocalStorage() {\n      //save to LocalStorage\n      const storeData = JSON.stringify(this.dataStorage.rootFolder.fileList);\n      localStorage.setItem('myStorage', storeData);\n    },\n    saveToLocalTrash() {\n      //save to Local Trash\n      const trashData = JSON.stringify(this.dataStorage.trash.fileList);\n      localStorage.setItem('myTrash', trashData);\n    }\n  },\n  filters: {\n    timeFormat(timestamp) {\n      let date = new Date(timestamp);\n      let year = date.getFullYear();\n      let month = date.getMonth() + 1;\n      let day = date.getDate();\n      let hours = '0' + date.getHours();\n      let minutes = '0' + date.getMinutes();\n      let seconds = '0' + date.getSeconds();\n      return `${year}-${month}-${day} ${hours.substr(-2)}:${minutes.substr(-2)}:${seconds.substr(\n        -2\n      )}`;\n    },\n    sizeFormat(bytes, decimals = 1) {\n      if (isNaN(bytes) || !bytes) return '';\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const dm = decimals < 0 ? 0 : decimals;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n  },\n  created() {\n    this.currentFolder = this.dataStorage.rootFolder;\n    this.folderNav.push(this.dataStorage.rootFolder);\n    this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n    const starFile = this.filterStarFile(this.dataStorage.rootFolder);\n    this.dataStorage.star.fileList = starFile;\n    const getStoreData = JSON.parse(localStorage.getItem('myStorage')) || [\n      {\n        id: '#1-f',\n        name: 'Hello World!',\n        editable: true,\n        isStar: false,\n        modifiedTime: 1598047432044,\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        childrenFolder: [],\n        fileList: [],\n        path: '/root'\n      }\n    ];\n    const getTrashData = JSON.parse(localStorage.getItem('myTrash')) || [];\n    this.dataStorage.rootFolder.fileList = getStoreData;\n    this.dataStorage.trash.fileList = getTrashData;\n  },\n  mounted() {},\n  directives: {\n    'click-outside': {\n      bind: function (el, binding, vnode) {\n        el.clickOutsideEvent = function (event) {\n          const elName = el.getAttribute('el-name');\n          if (\n            !(el == event.target || el.contains(event.target)) &&\n            elName != event.target.getAttribute('bind-el')\n          ) {\n            vnode.context[binding.expression](event, el);\n          }\n        };\n        document.body.addEventListener('click', el.clickOutsideEvent);\n        document.body.addEventListener('contextmenu', el.clickOutsideEvent);\n      },\n      unbind: function (el) {\n        document.body.removeEventListener('click', el.clickOutsideEvent);\n        document.body.removeEventListener('contextmenu', el.clickOutsideEvent);\n      }\n    }\n  }\n});\n\n//雲端硬碟 右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root',\n    items: {\n      upload: {\n        name: '上傳檔案',\n        callback() {\n          vm.activeUploadInput();\n        }\n      },\n      createNewFolder: {\n        name: '新增資料夾',\n        callback() {\n          $('#newFolderModal').modal('show');\n        }\n      }\n    }\n  });\n});\n\n//檔案夾右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root .folder_type',\n    items: {\n      // share: { name: '共享' },\n      // download: {\n      //   name: '下載',\n      //   callback() {\n      //     vm.download();\n      //   }\n      // },\n      star: {\n        name: '標示星號',\n        callback() {\n          vm.addStar();\n        }\n      },\n      moveToTrash: {\n        name: '移至垃圾桶',\n        callback() {\n          vm.moveToTrash();\n        }\n      }\n    }\n  });\n});\n//檔案右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root .doc_type',\n    items: {\n      download: {\n        name: '下載',\n        callback() {\n          vm.download();\n        }\n      },\n      star: {\n        name: '標示星號',\n        callback() {\n          vm.addStar();\n        }\n      },\n      moveToTrash: {\n        name: '移至垃圾桶',\n        callback() {\n          vm.moveToTrash();\n        }\n      }\n    }\n  });\n});\n\n//垃圾桶檔案及檔案夾右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.trash .doc_type , .table_contextmenu.trash .folder_type',\n    items: {\n      recycle: {\n        name: '還原',\n        callback() {\n          vm.recycleItem();\n        }\n      },\n      delete: {\n        name: '永久刪除',\n        callback() {\n          $('#deleteModal').modal('show');\n        }\n      }\n    }\n  });\n});\n"]}