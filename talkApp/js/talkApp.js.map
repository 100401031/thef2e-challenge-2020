{"version":3,"sources":["talkApp/js/talkApp.js"],"names":["vm","Vue","el","data","currentGroup","msgRecognizing","msgRecording","autoSend","tempMsg","text","audioBlob","audioUrl","audioDuration","groups","id","title","messages","computed","reverse","methods","recordFn","mediaRecorder","start","navigator","mediaDevices","getUserMedia","audio","then","stream","MediaRecorder","startTime","Date","now","audioChunks","addEventListener","event","push","stopTime","Blob","URL","createObjectURL","sendMsg","end","stop","inputRecognition","SpeechRecognition","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","SpeechRecognitionEvent","webkitSpeechRecognitionEvent","recognition","continuous","interimResults","lang","record","onstart","onend","commandRecognition","onresult","interim_transcript","final_transcript","i","resultIndex","results","length","isFinal","transcript","commands","grammar","join","speechRecognitionList","addFromString","grammars","maxAlternatives","setTimeout","last","command","toLowerCase","includes","switchGroup","group","inputGroup","replace","trim","index","parseInt","find","item","e","msg","sentTime","created"],"mappings":"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","sourcesContent":["var vm;\nvm = new Vue({\n  el: '#app',\n  data: {\n    currentGroup: {},\n    msgRecognizing: false,\n    msgRecording: false,\n    autoSend: false,\n    tempMsg: {\n      text: null,\n      audioBlob: null,\n      audioUrl: null,\n      audioDuration: null\n    },\n    groups: [\n      { id: '#1', title: '101 Airborne Division', messages: [] },\n      { id: '#2', title: 'Easy Company', messages: [] }\n    ]\n  },\n  computed: {\n    messages() {\n      return this.currentGroup.messages.reverse();\n    }\n  },\n  methods: {\n    recordFn() {\n      return {\n        mediaRecorder: null,\n        start: function () {\n          vm.msgRecording = true;\n          navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\n            this.mediaRecorder = new MediaRecorder(stream);\n            this.mediaRecorder.start();\n            const startTime = Date.now();\n            const audioChunks = [];\n            this.mediaRecorder.addEventListener('dataavailable', event => {\n              audioChunks.push(event.data);\n            });\n            this.mediaRecorder.addEventListener('stop', () => {\n              const stopTime = Date.now();\n              vm.tempMsg.audioDuration = stopTime - startTime;\n              const audioBlob = new Blob(audioChunks);\n              const audioUrl = URL.createObjectURL(audioBlob);\n              vm.tempMsg.audioBlob = audioBlob;\n              vm.tempMsg.audioUrl = audioUrl;\n              if (vm.autoSend) {\n                vm.sendMsg();\n              }\n            });\n          });\n        },\n        end: function () {\n          this.mediaRecorder.stop();\n          vm.msgRecording = false;\n        }\n      };\n    },\n    inputRecognition() {\n      const vm = this;\n      //辨識初始設定\n      const SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;\n      const SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList;\n      const SpeechRecognitionEvent = SpeechRecognitionEvent || webkitSpeechRecognitionEvent;\n      const recognition = new SpeechRecognition();\n      recognition.continuous = true; // 連續辨識\n      recognition.interimResults = true; // 是否要輸出中間結果\n      recognition.lang = 'en-US';\n      //錄音初始設定\n      const record = this.recordFn();\n      // 開始辨識及錄音\n      recognition.start();\n      recognition.onstart = function () {\n        record.start();\n        vm.msgRecognizing = true; // 設定為辨識中\n      };\n      recognition.onend = function () {\n        // 辨識完成\n        record.end();\n        vm.commandRecognition();\n        vm.msgRecognizing = false; // 設定為「非辨識中」\n      };\n      recognition.onresult = function (event) {\n        let interim_transcript = ''; // 中間結果\n        let final_transcript = '';\n        for (let i = event.resultIndex; i < event.results.length; ++i) {\n          // 對於每一個辨識結果\n          if (event.results[i].isFinal) {\n            // 如果是最終結果\n            final_transcript += event.results[i][0].transcript; // 將其加入最終結果中\n            vm.tempMsg.text = final_transcript;\n            recognition.stop();\n          } else {\n            // 否則\n            interim_transcript += event.results[i][0].transcript; // 將其加入中間結果中\n            vm.tempMsg.text = interim_transcript;\n          }\n        }\n      };\n    },\n    commandRecognition() {\n      const vm = this;\n      const SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;\n      const SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList;\n      const SpeechRecognitionEvent = SpeechRecognitionEvent || webkitSpeechRecognitionEvent;\n      const commands = ['switch to'];\n      var grammar =\n        '#JSGF V1.0; grammar commands; public <commands> = ' + commands.join(' | ') + ' ;';\n      const recognition = new SpeechRecognition();\n      const speechRecognitionList = new SpeechGrammarList();\n      speechRecognitionList.addFromString(grammar, 1);\n      recognition.grammars = speechRecognitionList;\n      recognition.lang = 'en-US';\n      recognition.continuous = true; // 連續辨識\n      recognition.interimResults = false; // 是否要輸出中間結果\n      recognition.maxAlternatives = 1;\n      recognition.start();\n      recognition.onend = function () {\n        // console.log('commandRecognition End');\n        setTimeout(() => {\n          if (!vm.msgRecording) {\n            // console.log('commandRecognition');\n            vm.commandRecognition();\n          }\n        }, 50);\n      };\n      recognition.onresult = function (event) {\n        //不在錄音的情況下執行\n        if (!vm.msgRecognizing) {\n          const last = event.results.length - 1;\n          const command = event.results[last][0].transcript;\n          // console.log(command.toLowerCase() + ' Confidence: ' + event.results[0][0].confidence);\n          if (command.toLowerCase().includes('switch to')) {\n            switchGroup(command.toLowerCase());\n          }\n        }\n      };\n      function switchGroup(command) {\n        let group;\n        if (command.includes('channel')) {\n          const inputGroup = command.replace('switch to channel', '').trim();\n          const index = parseInt(inputGroup, 10) - 1;\n          group = vm.groups[index];\n        } else {\n          const inputGroup = command.replace('switch to', '').trim();\n          if (inputGroup == vm.currentGroup.title) return;\n          group = vm.groups.find(item => item.title.toLowerCase() == inputGroup);\n        }\n        if (group && vm.currentGroup !== group) {\n          vm.currentGroup = group;\n        }\n      }\n    },\n    sendMsg(e, msg = this.tempMsg) {\n      // console.log('sendMsg');\n      msg.sentTime = Date.now();\n      this.currentGroup.messages.push(msg);\n      this.tempMsg = {\n        text: null,\n        audioBlob: null,\n        audioUrl: null,\n        audioDuration: null\n      };\n    }\n  },\n  created() {\n    this.commandRecognition();\n    this.currentGroup = this.groups[0];\n  }\n});\n"],"file":"talkApp.js"}