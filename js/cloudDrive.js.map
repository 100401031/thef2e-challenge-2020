{"version":3,"sources":["cloudDrive.js"],"names":["vm","Vue","el","data","fileNavDropdownVisible","storage_size","sidebarDropdownVisible","storage_usage","searchInput","searchResult","dataStorage","rootFolder","id","name","editable","modifiedTime","size","ownerId","fileType","fileList","isStar","path","trash","star","starFileId","lastSection","currentSection","currentFolder","preFolderNav","folderNav","preventRecord","dragoverItem","rightClickItem","isDraggingItem","fileDropdownVisible","displayfolderNav","computed","this","length","slice","newDisplayfolderNav","concat","newArray","storeUsagePercentage","displayFileList","searchFilter","searchFile","watch","newVal","oldVal","_this","push","editableFolder","$nextTick","$","removeClass","addClass","_this2","result","methods","folder","_this3","filter","item","includes","childrenFolder","forEach","_this4","filterStarFile","elName","getAttribute","handleListItemDblClick","isInTrash","handleNavToFolder","target","targetIndex","findIndex","splice","createFolder","arguments","undefined","Date","getTime","newFolder","dragStart","e","_creatUuid","dragOver","targetElem","saveToLocalStorage","newFolderName","dragLeave","dragEnd","srcItem","targetItem","moveDriveFile","dataTransfer","files","drop","handleUploadFile","file","targetFolder","_this5","i","receiveFile","type","alert","v","then","newFile","lastModified","checkFileType","JSON","stringify","localStorage","catch","err","fileName","indexOf","fileId","indexOfItem","console","log","convertFile","Promise","resolve","reject","reader","onerror","indexInList","saveToLocal","stringData","download","parse","getItem","href","decodeData","a","click","activeUploadInput","onload","$refs","fileInput","delFile","delFileIndex","error","readAsDataURL","find","deleteFile","setItem","removeItem","saveToLocalTrash","recycleItem","createElement","document","setAttribute","pathArray","moveToTrash","current","_loop2","now","d","c","r","Math","random","toString","fileContextMenu","addStar","findObj","obj","index","starPage","storeData","trashData","filters","indexOfDelItem","timeFormat","date","timestamp","year","month","day","getDate","getHours","getMinutes","seconds","getSeconds","performance","hours","substr","sizeFormat","bytes","decimals","isNaN","floor","dm","pow","toFixed","created","starFile","getStoreData","getTrashData","mounted","directives","bind","binding","vnode","clickOutsideEvent","event","contains","getFullYear","expression","body","addEventListener","removeEventListener","contextMenu","items","upload","modal","selector","callback","unbind","createNewFolder"],"mappings":"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","file":"cloudDrive.js","sourcesContent":["var vm;\nvm = new Vue({\n  el: '#app',\n  data: {\n    sidebarDropdownVisible: false,\n    fileNavDropdownVisible: false,\n    storage_size: 5000000,\n    storage_usage: 0,\n    searchInput: '',\n    searchResult: [],\n    dataStorage: {\n      rootFolder: {\n        id: 'root',\n        name: '我的雲端硬碟',\n        editable: true,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: [\n          {\n            id: '#1-f',\n            name: 'Hello World!',\n            editable: true,\n            isStar: false,\n            modifiedTime: 1598047432044,\n            size: '',\n            ownerId: 'me',\n            fileType: 'folder',\n            childrenFolder: [],\n            fileList: [],\n            path: '/root'\n          }\n        ],\n        path: ''\n      },\n      trash: {\n        id: 'trash',\n        name: '垃圾桶',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: []\n      },\n      star: {\n        id: 'star',\n        name: '已加星號',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: []\n      }\n    },\n    starFileId: [],\n    lastSection: null,\n    currentSection: null,\n    currentFolder: null,\n    preFolderNav: [],\n    folderNav: [],\n    preventRecord: false,\n    dragoverItem: null,\n    rightClickItem: null,\n    isDraggingItem: null,\n    newFolderName: '新文件夾',\n    fileDropdownVisible: false\n  },\n  computed: {\n    displayfolderNav() {\n      if (this.folderNav.length > 3) {\n        const newArray = this.folderNav.slice(1, -1);\n        const newDisplayfolderNav = [].concat(this.folderNav);\n        newDisplayfolderNav.splice(1, this.folderNav.length - 2, newArray);\n        return newDisplayfolderNav;\n      } else {\n        return this.folderNav;\n      }\n    },\n    storeUsagePercentage() {\n      return (this.storage_usage / this.storage_size) * 100;\n    },\n    displayFileList() {\n      return this.currentFolder.fileList;\n    },\n    searchFilter() {\n      if (this.searchInput != '') {\n        const result = this.searchFile(this.dataStorage.rootFolder, this.searchInput);\n        return result;\n      } else return [];\n    }\n  },\n  watch: {\n    currentFolder: {\n      handler(newVal, oldVal) {\n        if (oldVal && !this.preventRecord) {\n          if (\n            newVal.id == 'root' ||\n            newVal.id == 'trash' ||\n            newVal.id == 'search' ||\n            newVal.id == 'star'\n          ) {\n            this.folderNav = [];\n            this.folderNav.push(newVal);\n          } else {\n            //將資料夾路徑紀錄至folderNav\n            this.folderNav.push(newVal);\n          }\n          if (newVal.editable) {\n            this.editableFolder = true;\n          } else {\n            this.editableFolder = false;\n          }\n        }\n        if (\n          newVal.id == 'root' ||\n          newVal.id == 'trash' ||\n          newVal.id == 'search' ||\n          newVal.id == 'star'\n        ) {\n          if (oldVal) {\n            this.lastSection = this.currentSection;\n          }\n          this.currentSection = newVal.id;\n        }\n        this.$nextTick(() => {\n          if (this.lastSection) {\n            $('.table_wrapper').removeClass(this.lastSection);\n          }\n          $('.table_wrapper').addClass(this.currentSection);\n        });\n      }\n    },\n    dragoverItem() {\n      //TODO: 目前class被改動就會影響到contextmenu的判斷，應將contextmenu改為vue內data驅動\n      this.$nextTick(() => {\n        if (this.lastSection) {\n          $('.table_wrapper').removeClass(this.lastSection);\n        }\n        $('.table_wrapper').addClass(this.currentSection);\n      });\n    },\n    searchFilter(newVal) {\n      const result = {\n        id: 'search',\n        name: '搜尋結果',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: newVal,\n        path: ''\n      };\n      this.currentFolder = result;\n      if (this.searchInput == '') {\n        this.currentFolder = this.dataStorage.rootFolder;\n      }\n    }\n  },\n  methods: {\n    searchFile(folder, searchInput) {\n      const result = [];\n      const filter = folder.fileList.filter(item => item.name.includes(searchInput));\n      filter.forEach(item => {\n        result.push(item);\n      });\n      const childrenFolder = folder.fileList.filter(item => item.fileType == 'folder');\n      //是否有下一層\n      if (childrenFolder.length > 0) {\n        childrenFolder.forEach(item => {\n          //回傳結果再push進result\n          this.searchFile(item, searchInput).forEach(item => {\n            result.push(item);\n          });\n        });\n      }\n      return result;\n    },\n    filterStarFile(folder) {\n      const result = [];\n      const filter = folder.fileList.filter(item => item.isStar === true);\n      filter.forEach(item => {\n        result.push(item);\n      });\n      const childrenFolder = folder.fileList.filter(item => item.fileType == 'folder');\n      //是否有下一層\n      if (childrenFolder.length > 0) {\n        childrenFolder.forEach(item => {\n          //回傳結果再push進result\n          this.filterStarFile(item).forEach(item => {\n            result.push(item);\n          });\n        });\n      }\n      return result;\n    },\n    handleClickOutside(e, el) {\n      const elName = el.getAttribute('el-name');\n      this[`${elName}Visible`] = false;\n    },\n    handleListItemDblClick(item) {\n      if (item.isInTrash) return;\n      if (item.fileType === 'folder') {\n        this.currentFolder = item;\n      } else {\n        //TODO 待新增檔案預覽功能\n      }\n    },\n    handleNavToFolder(target) {\n      if (target === this.currentFolder) return;\n      //找到物件nav index 刪除它後面紀錄\n      const targetIndex = this.folderNav.findIndex(item => item.id == target.id);\n      this.folderNav.splice(targetIndex);\n      //防止watch時把此動作記錄下來\n      this.preventRecord = true;\n      this.currentFolder = target;\n      this.preventRecord = false;\n    },\n    createFolder(name = '新文件夾') {\n      this.sidebarDropdownVisible = false;\n      const newFolder = {\n        id: this._creatUuid(),\n        name,\n        editable: true,\n        isStar: false,\n        modifiedTime: new Date().getTime(),\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: [],\n        path: this.currentFolder.path + '/' + this.currentFolder.id\n      };\n      this.currentFolder.fileList.push(newFolder);\n      //save to local\n      this.saveToLocalStorage();\n      this.newFolderName = '新文件夾';\n    },\n    //拖曳開始，設定目前拖曳中元素\n    dragStart(e, item) {\n      if (!this.currentFolder.editable) return;\n      this.isDraggingItem = item;\n      $('.table_wrapper').addClass('draggedTable');\n    },\n\n    //拖曳結束，清除拖曳及目標元素\n    dragEnd(e, item) {\n      this.isDraggingItem = null;\n      this.dragoverItem = null;\n      $('.table_wrapper').removeClass('draggedTable');\n    },\n    //設定目前拖曳目標\n    dragOver(targetElem) {\n      if (!this.currentFolder.editable) return;\n      if (\n        !this.dragoverItem &&\n        !targetElem.fileList.includes(this.isDraggingItem) &&\n        targetElem != this.isDraggingItem\n      ) {\n        this.dragoverItem = targetElem;\n      }\n    },\n    //若拖曳離開目前目標元素，則將目標元素設定為null\n    dragLeave() {\n      if (!this.currentFolder.editable) return;\n      this.dragoverItem = null;\n    },\n    //拖曳檔案被移動至目標元素中\n    drop(e, targetElem) {\n      if (!this.currentFolder.editable) return;\n      let srcItem = this.isDraggingItem;\n      let targetItem = this.dragoverItem;\n      //判斷是否為Drive上既有檔案，若true則進行搬移\n      if (srcItem) {\n        //若拖曳檔案與目標檔案相同則return\n        if (srcItem == targetItem || !targetItem) return;\n        else this.moveDriveFile(srcItem, targetItem);\n        targetItem = null;\n        return;\n      }\n      //判斷是否為Drive上既有檔案，若false則將檔案存至local並將檔案資訊加入隸屬檔案夾物件\n      this.handleUploadFile(e.dataTransfer.files, targetElem);\n      this.dragoverItem = null;\n    },\n    uploadByInput(e) {\n      if (!this.currentFolder.editable) return;\n      this.handleUploadFile(e.target.files, this.currentFolder);\n      this.sidebarDropdownVisible = false;\n    },\n    //處理上傳檔案\n    handleUploadFile(file, targetFolder) {\n      for (let i = 0; i < file.length; i++) {\n        const receiveFile = file[i];\n        if (receiveFile.type == '') {\n          alert(`「${receiveFile.name}」格式錯誤，目前暫不支援上傳此種格式。`);\n          return;\n        }\n        if (receiveFile.size > 3890704) {\n          alert(\n            `「${receiveFile.name}」檔案太大囉，由於是存入localStorage，建議測試檔案小於3.8MB。`\n          );\n          return;\n        }\n        this.convertFile(receiveFile)\n          .then(data => {\n            const fileId = this._creatUuid();\n            const fileName = receiveFile.name;\n            const newFile = {\n              id: fileId,\n              name: fileName,\n              isStar: false,\n              modifiedTime: receiveFile.lastModified,\n              size: receiveFile.size,\n              ownerId: 'me',\n              fileType: this.checkFileType(receiveFile.type),\n              path: this.currentFolder.path + '/' + this.currentFolder.id\n            };\n            targetFolder.fileList.push(newFile);\n            this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n            //save to local\n            this.saveToLocalStorage();\n          })\n          .catch(err => {\n            console.log('err', err);\n          });\n      }\n    },\n    //Drive檔案搬移\n    moveDriveFile(srcItem, targetItem) {\n      if (srcItem.fileType != 'folder' && targetItem.fileType == 'folder') {\n        const indexOfItem = this.currentFolder.fileList.indexOf(srcItem);\n        targetItem.fileList.push(srcItem);\n        this.currentFolder.fileList.splice(indexOfItem, 1);\n        //save to local\n        this.saveToLocalStorage();\n      } else if (srcItem.fileType == 'folder' && targetItem.fileType == 'folder') {\n        const indexInList = this.currentFolder.fileList.indexOf(srcItem);\n        //加入\n        targetItem.fileList.push(srcItem);\n        //移出\n        this.currentFolder.fileList.splice(indexInList, 1);\n        //save to local\n        this.saveToLocalStorage();\n      }\n    },\n    checkFileType(fileType) {\n      if (fileType.includes('image')) return 'image';\n      if (\n        fileType.includes('msword') ||\n        fileType.includes('application/vnd.openxmlformats-officedocument.wordprocessingml.document')\n      )\n        return 'msword';\n      if (fileType.includes('pdf')) return 'pdf';\n      else return 'default';\n    },\n    convertFile(file) {\n      return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result);\n        };\n        reader.onerror = () => {\n          reject(reader.error);\n        };\n        reader.readAsDataURL(file);\n      });\n    },\n    saveToLocal(data, fileId, fileName) {\n      const newFile = { data, fileId, fileName };\n      const stringData = JSON.stringify(newFile);\n      localStorage.setItem(fileId, stringData);\n    },\n    download(item = this.rightClickItem) {\n      if (this.currentSection == 'trash') return;\n      if (item.fileType == 'folder') return;\n      const decodeData = JSON.parse(localStorage.getItem(item.id));\n      var a = document.createElement('a');\n      a.href = decodeData.data;\n      a.setAttribute('download', item.name);\n      a.click();\n    },\n    activeUploadInput() {\n      if (this.currentSection != 'root') {\n        this.currentFolder = this.dataStorage.rootFolder;\n      }\n      this.$refs.fileInput.click();\n    },\n    moveToTrash(file = this.rightClickItem) {\n      if (this.currentSection == 'trash') return;\n      file.isInTrash = true;\n      this.dataStorage.trash.fileList.push(file);\n      const delFile = this.currentFolder.fileList.find(item => item.id == file.id);\n      const delFileIndex = this.currentFolder.fileList.indexOf(delFile);\n      this.currentFolder.fileList.splice(delFileIndex, 1);\n      //save to local\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n    },\n    deleteFile(file = this.rightClickItem) {\n      const delFileIndex = this.dataStorage.trash.fileList.indexOf(file);\n      this.dataStorage.trash.fileList.splice(delFileIndex, 1);\n      localStorage.removeItem(file.id);\n      this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n      //save to local\n      this.saveToLocalTrash();\n    },\n    recycleItem(item = this.rightClickItem) {\n      if (this.currentSection != 'trash') return;\n      ///讀取path\n      const pathArray = item.path.split('/');\n      //刪除根目錄及前方空白\n      pathArray.splice(0, 2);\n      var targetFolder;\n      if (pathArray.length == 0) {\n        //檔案於根目錄\n        targetFolder = this.dataStorage.rootFolder;\n      } else {\n        //檔案於子目錄\n        var current = this.dataStorage.rootFolder;\n        for (let i = 0; i < pathArray.length; i++) {\n          const childFolder = current.fileList.find(item => item.id == pathArray[i]);\n          current = childFolder;\n        }\n        targetFolder = current;\n      }\n      item.isInTrash = false;\n      targetFolder.fileList.push(item);\n      const indexOfDelItem = this.dataStorage.trash.fileList.indexOf(item);\n      this.dataStorage.trash.fileList.splice(indexOfDelItem, 1);\n      //save to local\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n    },\n    _creatUuid() {\n      var d = Date.now();\n      if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now(); //use high-precision timer if available\n      }\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n      });\n    },\n    fileContextMenu(item) {\n      this.rightClickItem = item;\n    },\n    addStar(item = this.rightClickItem) {\n      item.isStar = !item.isStar;\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n      if (item.isStar) {\n        this.dataStorage.star.fileList.push(item);\n      } else {\n        const target = this.dataStorage.star.fileList;\n        const findObj = target.find(obj => obj.id == item.id);\n        const index = target.indexOf(findObj);\n        target.splice(index, 1);\n      }\n    },\n    starPage() {\n      this.currentFolder = this.dataStorage.star;\n    },\n    saveToLocalStorage() {\n      //save to LocalStorage\n      const storeData = JSON.stringify(this.dataStorage.rootFolder.fileList);\n      localStorage.setItem('myStorage', storeData);\n    },\n    saveToLocalTrash() {\n      //save to Local Trash\n      const trashData = JSON.stringify(this.dataStorage.trash.fileList);\n      localStorage.setItem('myTrash', trashData);\n    }\n  },\n  filters: {\n    timeFormat(timestamp) {\n      let date = new Date(timestamp);\n      let year = date.getFullYear();\n      let month = date.getMonth() + 1;\n      let day = date.getDate();\n      let hours = '0' + date.getHours();\n      let minutes = '0' + date.getMinutes();\n      let seconds = '0' + date.getSeconds();\n      return `${year}-${month}-${day} ${hours.substr(-2)}:${minutes.substr(-2)}:${seconds.substr(\n        -2\n      )}`;\n    },\n    sizeFormat(bytes, decimals = 1) {\n      if (isNaN(bytes) || !bytes) return '';\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const dm = decimals < 0 ? 0 : decimals;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n  },\n  created() {\n    this.currentFolder = this.dataStorage.rootFolder;\n    this.folderNav.push(this.dataStorage.rootFolder);\n    this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n    const starFile = this.filterStarFile(this.dataStorage.rootFolder);\n    this.dataStorage.star.fileList = starFile;\n    const getStoreData = JSON.parse(localStorage.getItem('myStorage')) || [\n      {\n        id: '#1-f',\n        name: 'Hello World!',\n        editable: true,\n        isStar: false,\n        modifiedTime: 1598047432044,\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        childrenFolder: [],\n        fileList: [],\n        path: '/root'\n      }\n    ];\n    const getTrashData = JSON.parse(localStorage.getItem('myTrash')) || [];\n    this.dataStorage.rootFolder.fileList = getStoreData;\n    this.dataStorage.trash.fileList = getTrashData;\n  },\n  mounted() {},\n  directives: {\n    'click-outside': {\n      bind: function (el, binding, vnode) {\n        el.clickOutsideEvent = function (event) {\n          const elName = el.getAttribute('el-name');\n          if (\n            !(el == event.target || el.contains(event.target)) &&\n            elName != event.target.getAttribute('bind-el')\n          ) {\n            vnode.context[binding.expression](event, el);\n          }\n        };\n        document.body.addEventListener('click', el.clickOutsideEvent);\n        document.body.addEventListener('contextmenu', el.clickOutsideEvent);\n      },\n      unbind: function (el) {\n        document.body.removeEventListener('click', el.clickOutsideEvent);\n        document.body.removeEventListener('contextmenu', el.clickOutsideEvent);\n      }\n    }\n  }\n});\n\n//雲端硬碟 右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root',\n    items: {\n      upload: {\n        name: '上傳檔案',\n        callback() {\n          vm.activeUploadInput();\n        }\n      },\n      createNewFolder: {\n        name: '新增資料夾',\n        callback() {\n          $('#newFolderModal').modal('show');\n        }\n      }\n    }\n  });\n});\n\n//檔案夾右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root .folder_type',\n    items: {\n      // share: { name: '共享' },\n      // download: {\n      //   name: '下載',\n      //   callback() {\n      //     vm.download();\n      //   }\n      // },\n      star: {\n        name: '標示星號',\n        callback() {\n          vm.addStar();\n        }\n      },\n      moveToTrash: {\n        name: '移至垃圾桶',\n        callback() {\n          vm.moveToTrash();\n        }\n      }\n    }\n  });\n});\n//檔案右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root .doc_type',\n    items: {\n      download: {\n        name: '下載',\n        callback() {\n          vm.download();\n        }\n      },\n      star: {\n        name: '標示星號',\n        callback() {\n          vm.addStar();\n        }\n      },\n      moveToTrash: {\n        name: '移至垃圾桶',\n        callback() {\n          vm.moveToTrash();\n        }\n      }\n    }\n  });\n});\n\n//垃圾桶檔案及檔案夾右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.trash .doc_type , .table_contextmenu.trash .folder_type',\n    items: {\n      recycle: {\n        name: '還原',\n        callback() {\n          vm.recycleItem();\n        }\n      },\n      delete: {\n        name: '永久刪除',\n        callback() {\n          $('#deleteModal').modal('show');\n        }\n      }\n    }\n  });\n});\n"]}