{"version":3,"sources":["cloudDrive.js"],"names":["vm","Vue","el","data","sidebarDropdownVisible","fileNavDropdownVisible","storage_usage","searchInput","storage_size","searchResult","dataStorage","rootFolder","id","name","editable","modifiedTime","ownerId","fileType","fileList","size","isStar","childrenFolder","path","trash","star","currentSection","currentFolder","starFileId","lastSection","preFolderNav","folderNav","preventRecord","rightClickItem","isDraggingItem","newFolderName","length","newArray","this","slice","newDisplayfolderNav","concat","displayfolderNav","splice","storeUsagePercentage","displayFileList","searchFilter","watch","handler","newVal","oldVal","_this","push","editableFolder","$nextTick","$","removeClass","addClass","dragoverItem","_this2","result","methods","searchFile","folder","filter","item","includes","forEach","_this3","filterStarFile","_this4","handleClickOutside","e","elName","getAttribute","handleListItemDblClick","targetIndex","target","findIndex","createFolder","arguments","undefined","_creatUuid","Date","getTime","handleNavToFolder","newFolder","saveToLocalStorage","dragStart","targetElem","dragLeave","drop","srcItem","targetItem","dragOver","dataTransfer","files","uploadByInput","handleUploadFile","file","targetFolder","_this5","i","_ret","receiveFile","v","alert","convertFile","fileName","newFile","lastModified","type","checkFileType","saveToLocal","fileId","JSON","stringify","localStorage","catch","err","_loop","_typeof","moveDriveFile","indexOf","indexOfItem","indexInList","console","Promise","resolve","reject","reader","FileReader","onload","error","stringData","download","decodeData","a","parse","getItem","document","createElement","setAttribute","click","activeUploadInput","$refs","fileInput","delFileIndex","isInTrash","find","delFile","saveToLocalTrash","deleteFile","setItem","split","pathArray","current","_loop2","moveToTrash","indexOfDelItem","d","performance","now","replace","c","Math","random","floor","r","fileContextMenu","addStar","index","obj","findObj","starPage","storeData","childFolder","trashData","filters","timeFormat","timestamp","date","day","hours","getHours","minutes","getMinutes","seconds","getSeconds","year","month","substr","sizeFormat","bytes","isNaN","dm","decimals","log","parseFloat","pow","toString","starFile","getStoreData","getTrashData","mounted","click-outside","bind","binding","event","contains","getFullYear","expression","body","addEventListener","clickOutsideEvent","unbind","removeEventListener","contextMenu","selector","items","created","callback","createNewFolder","modal","_download","_defineProperty","recycleItem"],"mappings":"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","file":"cloudDrive.js","sourcesContent":["var vm;\nvm = new Vue({\n  el: '#app',\n  data: {\n    sidebarDropdownVisible: false,\n    fileNavDropdownVisible: false,\n    storage_size: 5000000,\n    storage_usage: 0,\n    searchInput: '',\n    searchResult: [],\n    dataStorage: {\n      rootFolder: {\n        id: 'root',\n        name: '我的雲端硬碟',\n        editable: true,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: [\n          {\n            id: '#1-f',\n            name: '預設資料夾',\n            editable: true,\n            isStar: false,\n            modifiedTime: 1598047432044,\n            size: '',\n            ownerId: 'me',\n            fileType: 'folder',\n            childrenFolder: [],\n            fileList: [],\n            path: '/root'\n          }\n        ],\n        path: ''\n      },\n      trash: {\n        id: 'trash',\n        name: '垃圾桶',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: []\n      },\n      star: {\n        id: 'star',\n        name: '已加星號',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: []\n      }\n    },\n    starFileId: [],\n    lastSection: null,\n    currentSection: null,\n    currentFolder: null,\n    preFolderNav: [],\n    folderNav: [],\n    preventRecord: false,\n    dragoverItem: null,\n    rightClickItem: null,\n    isDraggingItem: null,\n    newFolderName: '新文件夾'\n  },\n  computed: {\n    displayfolderNav() {\n      if (this.folderNav.length > 3) {\n        const newArray = this.folderNav.slice(1, -1);\n        const newDisplayfolderNav = [].concat(this.folderNav);\n        newDisplayfolderNav.splice(1, this.folderNav.length - 2, newArray);\n        return newDisplayfolderNav;\n      } else {\n        return this.folderNav;\n      }\n    },\n    storeUsagePercentage() {\n      return (this.storage_usage / this.storage_size) * 100;\n    },\n    displayFileList() {\n      return this.currentFolder.fileList;\n    },\n    searchFilter() {\n      if (this.searchInput != '') {\n        const result = this.searchFile(this.dataStorage.rootFolder, this.searchInput);\n        return result;\n      } else return [];\n    }\n  },\n  watch: {\n    currentFolder: {\n      handler(newVal, oldVal) {\n        if (oldVal && !this.preventRecord) {\n          if (\n            newVal.id == 'root' ||\n            newVal.id == 'trash' ||\n            newVal.id == 'search' ||\n            newVal.id == 'star'\n          ) {\n            this.folderNav = [];\n            this.folderNav.push(newVal);\n          } else {\n            //將資料夾路徑紀錄至folderNav\n            this.folderNav.push(newVal);\n          }\n          if (newVal.editable) {\n            this.editableFolder = true;\n          } else {\n            this.editableFolder = false;\n          }\n        }\n        if (\n          newVal.id == 'root' ||\n          newVal.id == 'trash' ||\n          newVal.id == 'search' ||\n          newVal.id == 'star'\n        ) {\n          if (oldVal) {\n            this.lastSection = this.currentSection;\n          }\n          this.currentSection = newVal.id;\n        }\n        this.$nextTick(() => {\n          if (this.lastSection) {\n            $('.table_wrapper').removeClass(this.lastSection);\n          }\n          $('.table_wrapper').addClass(this.currentSection);\n        });\n      }\n    },\n    dragoverItem() {\n      //TODO: 目前class被改動就會影響到contextmenu的判斷，應將contextmenu改為vue內data驅動\n      this.$nextTick(() => {\n        if (this.lastSection) {\n          $('.table_wrapper').removeClass(this.lastSection);\n        }\n        $('.table_wrapper').addClass(this.currentSection);\n      });\n    },\n    searchFilter(newVal) {\n      const result = {\n        id: 'search',\n        name: '搜尋結果',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: newVal,\n        path: ''\n      };\n      this.currentFolder = result;\n      if (this.searchInput == '') {\n        this.currentFolder = this.dataStorage.rootFolder;\n      }\n    }\n  },\n  methods: {\n    searchFile(folder, searchInput) {\n      const result = [];\n      const filter = folder.fileList.filter(item => item.name.includes(searchInput));\n      filter.forEach(item => {\n        result.push(item);\n      });\n      const childrenFolder = folder.fileList.filter(item => item.fileType == 'folder');\n      //是否有下一層\n      if (childrenFolder.length > 0) {\n        childrenFolder.forEach(item => {\n          //回傳結果再push進result\n          this.searchFile(item, searchInput).forEach(item => {\n            result.push(item);\n          });\n        });\n      }\n      return result;\n    },\n    filterStarFile(folder) {\n      const result = [];\n      const filter = folder.fileList.filter(item => item.isStar === true);\n      filter.forEach(item => {\n        result.push(item);\n      });\n      const childrenFolder = folder.fileList.filter(item => item.fileType == 'folder');\n      //是否有下一層\n      if (childrenFolder.length > 0) {\n        childrenFolder.forEach(item => {\n          //回傳結果再push進result\n          this.filterStarFile(item).forEach(item => {\n            result.push(item);\n          });\n        });\n      }\n      return result;\n    },\n    handleClickOutside(e, el) {\n      const elName = el.getAttribute('el-name');\n      this[`${elName}Visible`] = false;\n    },\n    handleListItemDblClick(item) {\n      if (item.isInTrash) return;\n      if (item.fileType === 'folder') {\n        this.currentFolder = item;\n      } else {\n        //TODO 待新增檔案預覽功能\n      }\n    },\n    handleNavToFolder(target) {\n      if (target === this.currentFolder) return;\n      //找到物件nav index 刪除它後面紀錄\n      const targetIndex = this.folderNav.findIndex(item => item.id == target.id);\n      this.folderNav.splice(targetIndex);\n      //防止watch時把此動作記錄下來\n      this.preventRecord = true;\n      this.currentFolder = target;\n      this.preventRecord = false;\n    },\n    createFolder(name = '新文件夾') {\n      this.sidebarDropdownVisible = false;\n      const newFolder = {\n        id: this._creatUuid(),\n        name,\n        editable: true,\n        isStar: false,\n        modifiedTime: new Date().getTime(),\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: [],\n        path: this.currentFolder.path + '/' + this.currentFolder.id\n      };\n      this.currentFolder.fileList.push(newFolder);\n      //save to local\n      this.saveToLocalStorage();\n      this.newFolderName = '新文件夾';\n    },\n    //拖曳開始，設定目前拖曳中元素\n    dragStart(e, item) {\n      if (!this.currentFolder.editable) return;\n      this.isDraggingItem = item;\n      $('.table_wrapper').addClass('draggedTable');\n    },\n\n    //拖曳結束，清除拖曳及目標元素\n    dragEnd(e, item) {\n      this.isDraggingItem = null;\n      this.dragoverItem = null;\n      $('.table_wrapper').removeClass('draggedTable');\n    },\n    //設定目前拖曳目標\n    dragOver(targetElem) {\n      if (!this.currentFolder.editable) return;\n      if (\n        !this.dragoverItem &&\n        !targetElem.fileList.includes(this.isDraggingItem) &&\n        targetElem != this.isDraggingItem\n      ) {\n        this.dragoverItem = targetElem;\n      }\n    },\n    //若拖曳離開目前目標元素，則將目標元素設定為null\n    dragLeave() {\n      if (!this.currentFolder.editable) return;\n      this.dragoverItem = null;\n    },\n    //拖曳檔案被移動至目標元素中\n    drop(e, targetElem) {\n      if (!this.currentFolder.editable) return;\n      let srcItem = this.isDraggingItem;\n      let targetItem = this.dragoverItem;\n      //判斷是否為Drive上既有檔案，若true則進行搬移\n      if (srcItem) {\n        //若拖曳檔案與目標檔案相同則return\n        if (srcItem == targetItem || !targetItem) return;\n        else this.moveDriveFile(srcItem, targetItem);\n        targetItem = null;\n        return;\n      }\n      //判斷是否為Drive上既有檔案，若false則將檔案存至local並將檔案資訊加入隸屬檔案夾物件\n      this.handleUploadFile(e.dataTransfer.files, targetElem);\n      this.dragoverItem = null;\n    },\n    uploadByInput(e) {\n      if (!this.currentFolder.editable) return;\n      this.handleUploadFile(e.target.files, this.currentFolder);\n      this.sidebarDropdownVisible = false;\n    },\n    //處理上傳檔案\n    handleUploadFile(file, targetFolder) {\n      for (let i = 0; i < file.length; i++) {\n        const receiveFile = file[i];\n        if (receiveFile.type == '') {\n          alert(`「${receiveFile.name}」格式錯誤，目前暫不支援上傳此種格式。`);\n          return;\n        }\n        if (receiveFile.size > 3890704) {\n          alert(\n            `「${receiveFile.name}」檔案太大囉，由於是存入localStorage，建議測試檔案小於3.8MB。`\n          );\n          return;\n        }\n        this.convertFile(receiveFile)\n          .then(data => {\n            const fileId = this._creatUuid();\n            const fileName = receiveFile.name;\n            const newFile = {\n              id: fileId,\n              name: fileName,\n              isStar: false,\n              modifiedTime: receiveFile.lastModified,\n              size: receiveFile.size,\n              ownerId: 'me',\n              fileType: this.checkFileType(receiveFile.type),\n              dataURL: data\n            };\n            targetFolder.fileList.push(newFile);\n            this.saveToLocal(data, fileId, fileName);\n            this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n            //save to local\n            this.saveToLocalStorage();\n          })\n          .catch(err => {\n            console.log('err', err);\n          });\n      }\n    },\n    //Drive檔案搬移\n    moveDriveFile(srcItem, targetItem) {\n      if (srcItem.fileType != 'folder' && targetItem.fileType == 'folder') {\n        const indexOfItem = this.currentFolder.fileList.indexOf(srcItem);\n        targetItem.fileList.push(srcItem);\n        this.currentFolder.fileList.splice(indexOfItem, 1);\n        //save to local\n        this.saveToLocalStorage();\n      } else if (srcItem.fileType == 'folder' && targetItem.fileType == 'folder') {\n        const indexInList = this.currentFolder.fileList.indexOf(srcItem);\n        //加入\n        targetItem.fileList.push(srcItem);\n        //移出\n        this.currentFolder.fileList.splice(indexInList, 1);\n        //save to local\n        this.saveToLocalStorage();\n      }\n    },\n    checkFileType(fileType) {\n      if (fileType.includes('image')) return 'image';\n      if (\n        fileType.includes('msword') ||\n        fileType.includes('application/vnd.openxmlformats-officedocument.wordprocessingml.document')\n      )\n        return 'msword';\n      if (fileType.includes('pdf')) return 'pdf';\n      else return 'default';\n    },\n    convertFile(file) {\n      return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result);\n        };\n        reader.onerror = () => {\n          reject(reader.error);\n        };\n        reader.readAsDataURL(file);\n      });\n    },\n    saveToLocal(data, fileId, fileName) {\n      const newFile = { data, fileId, fileName };\n      const stringData = JSON.stringify(newFile);\n      localStorage.setItem(fileId, stringData);\n    },\n    download(item = this.rightClickItem) {\n      if (this.currentSection == 'trash') return;\n      if (item.fileType == 'folder') return;\n      const decodeData = JSON.parse(localStorage.getItem(item.id));\n      var a = document.createElement('a');\n      a.href = decodeData.data;\n      a.setAttribute('download', item.name);\n      a.click();\n    },\n    activeUploadInput() {\n      if (this.currentSection != 'root') {\n        this.currentFolder = this.dataStorage.rootFolder;\n      }\n      this.$refs.fileInput.click();\n    },\n    moveToTrash(file = this.rightClickItem) {\n      if (this.currentSection == 'trash') return;\n      file.isInTrash = true;\n      this.dataStorage.trash.fileList.push(file);\n      const delFile = this.currentFolder.fileList.find(item => (item.id = file.id));\n      const delFileIndex = this.currentFolder.fileList.indexOf(delFile);\n      this.currentFolder.fileList.splice(delFileIndex, 1);\n      //save to local\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n    },\n    deleteFile(file = this.rightClickItem) {\n      const delFileIndex = this.dataStorage.trash.fileList.indexOf(file);\n      this.dataStorage.trash.fileList.splice(delFileIndex, 1);\n      //save to local\n      this.saveToLocalTrash();\n    },\n    recycleItem(item = this.rightClickItem) {\n      if (this.currentSection != 'trash') return;\n      ///讀取path\n      const pathArray = item.path.split('/');\n      //刪除根目錄及前方空白\n      pathArray.splice(0, 2);\n      var targetFolder;\n      if (pathArray.length == 0) {\n        //檔案於根目錄\n        targetFolder = this.dataStorage.rootFolder;\n      } else {\n        //檔案於子目錄\n        var current = this.dataStorage.rootFolder;\n        for (let i = 0; i < pathArray.length; i++) {\n          const childFolder = current.fileList.find(item => item.id == pathArray[i]);\n          current = childFolder;\n        }\n        targetFolder = current;\n      }\n      item.isInTrash = false;\n      targetFolder.fileList.push(item);\n      const indexOfDelItem = this.dataStorage.trash.fileList.indexOf(item);\n      this.dataStorage.trash.fileList.splice(indexOfDelItem, 1);\n      //save to local\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n    },\n    _creatUuid() {\n      var d = Date.now();\n      if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now(); //use high-precision timer if available\n      }\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n      });\n    },\n    fileContextMenu(item) {\n      this.rightClickItem = item;\n    },\n    addStar(item = this.rightClickItem) {\n      item.isStar = !item.isStar;\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n      if (item.isStar) {\n        this.dataStorage.star.fileList.push(item);\n      } else {\n        const target = this.dataStorage.star.fileList;\n        const findObj = target.find(obj => obj.id == item.id);\n        const index = target.indexOf(findObj);\n        target.splice(index, 1);\n      }\n    },\n    starPage() {\n      this.currentFolder = this.dataStorage.star;\n    },\n    saveToLocalStorage() {\n      //save to LocalStorage\n      const storeData = JSON.stringify(this.dataStorage.rootFolder.fileList);\n      localStorage.setItem('myStorage', storeData);\n    },\n    saveToLocalTrash() {\n      //save to Local Trash\n      const trashData = JSON.stringify(this.dataStorage.trash.fileList);\n      localStorage.setItem('myTrash', trashData);\n    }\n  },\n  filters: {\n    timeFormat(timestamp) {\n      let date = new Date(timestamp);\n      let year = date.getFullYear();\n      let month = date.getMonth() + 1;\n      let day = date.getDate();\n      let hours = '0' + date.getHours();\n      let minutes = '0' + date.getMinutes();\n      let seconds = '0' + date.getSeconds();\n      return `${year}-${month}-${day} ${hours.substr(-2)}:${minutes.substr(-2)}:${seconds.substr(\n        -2\n      )}`;\n    },\n    sizeFormat(bytes, decimals = 1) {\n      if (isNaN(bytes) || !bytes) return '';\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const dm = decimals < 0 ? 0 : decimals;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n  },\n  created() {\n    this.currentFolder = this.dataStorage.rootFolder;\n    this.folderNav.push(this.dataStorage.rootFolder);\n    this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n    const starFile = this.filterStarFile(this.dataStorage.rootFolder);\n    this.dataStorage.star.fileList = starFile;\n    const getStoreData = JSON.parse(localStorage.getItem('myStorage')) || [\n      {\n        id: '#1-f',\n        name: '預設資料夾',\n        editable: true,\n        isStar: false,\n        modifiedTime: 1598047432044,\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        childrenFolder: [],\n        fileList: [],\n        path: '/root'\n      }\n    ];\n    console.log(getStoreData);\n    const getTrashData = JSON.parse(localStorage.getItem('myTrash')) || [];\n    console.log(getTrashData);\n    this.dataStorage.rootFolder.fileList = getStoreData;\n    this.dataStorage.trash.fileList = getTrashData;\n  },\n  mounted() {},\n  directives: {\n    'click-outside': {\n      bind: function (el, binding, vnode) {\n        el.clickOutsideEvent = function (event) {\n          const elName = el.getAttribute('el-name');\n          if (\n            !(el == event.target || el.contains(event.target)) &&\n            elName != event.target.getAttribute('bind-el')\n          ) {\n            vnode.context[binding.expression](event, el);\n          }\n        };\n        document.body.addEventListener('click', el.clickOutsideEvent);\n        document.body.addEventListener('contextmenu', el.clickOutsideEvent);\n      },\n      unbind: function (el) {\n        document.body.removeEventListener('click', el.clickOutsideEvent);\n        document.body.removeEventListener('contextmenu', el.clickOutsideEvent);\n      }\n    }\n  }\n});\n\n//雲端硬碟 右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root',\n    items: {\n      upload: {\n        name: '上傳檔案',\n        callback() {\n          vm.activeUploadInput();\n        }\n      },\n      createNewFolder: {\n        name: '新增資料夾',\n        callback() {\n          $('#newFolderModal').modal('show');\n        }\n      }\n    }\n  });\n});\n\n//檔案夾右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root .folder_type',\n    items: {\n      // share: { name: '共享' },\n      // download: {\n      //   name: '下載',\n      //   callback() {\n      //     vm.download();\n      //   }\n      // },\n      star: {\n        name: '標示星號',\n        callback() {\n          vm.addStar();\n        }\n      },\n      moveToTrash: {\n        name: '移至垃圾桶',\n        callback() {\n          vm.moveToTrash();\n        }\n      }\n    }\n  });\n});\n//檔案右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root .doc_type',\n    items: {\n      download: {\n        name: '下載',\n        callback() {\n          vm.download();\n        }\n      },\n      star: {\n        name: '標示星號',\n        callback() {\n          vm.addStar();\n        }\n      },\n      moveToTrash: {\n        name: '移至垃圾桶',\n        callback() {\n          vm.moveToTrash();\n        }\n      }\n    }\n  });\n});\n\n//垃圾桶檔案及檔案夾右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.trash .doc_type , .table_contextmenu.trash .folder_type',\n    items: {\n      download: {\n        name: '還原',\n        callback() {\n          vm.recycleItem();\n        },\n        name: '永久刪除',\n        callback() {\n          $('#deleteModal').modal('show');\n        }\n      }\n    }\n  });\n});\n"]}