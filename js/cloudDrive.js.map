{"version":3,"sources":["cloudDrive.js"],"names":["vm","Vue","el","data","sidebarDropdownVisible","fileNavDropdownVisible","storage_usage","searchInput","storage_size","searchResult","dataStorage","rootFolder","id","name","editable","modifiedTime","ownerId","fileType","fileList","size","isStar","childrenFolder","path","trash","star","currentSection","currentFolder","starFileId","lastSection","preFolderNav","folderNav","preventRecord","rightClickItem","isDraggingItem","newFolderName","length","newArray","this","slice","newDisplayfolderNav","concat","displayfolderNav","splice","storeUsagePercentage","displayFileList","searchFilter","watch","handler","newVal","oldVal","_this","push","editableFolder","$nextTick","$","removeClass","addClass","result","methods","searchFile","folder","_this2","includes","forEach","item","filter","filterStarFile","_this3","handleClickOutside","e","getAttribute","elName","handleListItemDblClick","handleNavToFolder","target","targetIndex","findIndex","createFolder","arguments","undefined","newFolder","_creatUuid","dragStart","dragOver","targetElem","dragoverItem","dragLeave","drop","targetItem","srcItem","moveDriveFile","handleUploadFile","dataTransfer","files","uploadByInput","file","i","_ret","receiveFile","type","alert","v","_this4","convertFile","then","fileName","newFile","fileId","lastModified","checkFileType","dataURL","targetFolder","localStorage","saveToLocalStorage","catch","err","_loop","_typeof","indexOf","saveToLocal","console","log","Promise","resolve","reject","FileReader","reader","indexOfItem","error","readAsDataURL","stringData","setItem","download","parse","getItem","href","a","setAttribute","activeUploadInput","$refs","fileInput","click","delFileIndex","onerror","isInTrash","find","delFile","JSON","stringify","saveToLocalTrash","recycleItem","decodeData","current","pathArray","_loop2","indexOfDelItem","d","performance","now","deleteFile","c","Math","floor","r","toString","fileContextMenu","addStar","findObj","index","obj","starPage","storeData","trashData","timeFormat","date","year","getFullYear","month","day","hours","getHours","getMinutes","getSeconds","substr","minutes","seconds","sizeFormat","bytes","decimals","isNaN","random","dm","pow","starFile","getStoreData","getTrashData","mounted","click-outside","bind","binding","vnode","filters","clickOutsideEvent","event","timestamp","contains","getMonth","context","document","body","addEventListener","unbind","removeEventListener","created","selector","items","upload","callback","modal","moveToTrash","contextMenu","createNewFolder","_download","_defineProperty"],"mappings":"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","file":"cloudDrive.js","sourcesContent":["var vm;\nvm = new Vue({\n  el: '#app',\n  data: {\n    sidebarDropdownVisible: false,\n    fileNavDropdownVisible: false,\n    storage_size: 5000000,\n    storage_usage: 0,\n    searchInput: '',\n    searchResult: [],\n    dataStorage: {\n      rootFolder: {\n        id: 'root',\n        name: '我的雲端硬碟',\n        editable: true,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: [\n          {\n            id: '#1-f',\n            name: '預設資料夾',\n            editable: true,\n            isStar: false,\n            modifiedTime: 1598047432044,\n            size: '',\n            ownerId: 'me',\n            fileType: 'folder',\n            childrenFolder: [],\n            fileList: [],\n            path: '/root'\n          }\n        ],\n        path: ''\n      },\n      trash: {\n        id: 'trash',\n        name: '垃圾桶',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: []\n      },\n      star: {\n        id: 'star',\n        name: '已加星號',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: []\n      }\n    },\n    starFileId: [],\n    lastSection: null,\n    currentSection: null,\n    currentFolder: null,\n    preFolderNav: [],\n    folderNav: [],\n    preventRecord: false,\n    dragoverItem: null,\n    rightClickItem: null,\n    isDraggingItem: null,\n    newFolderName: '新文件夾'\n  },\n  computed: {\n    displayfolderNav() {\n      if (this.folderNav.length > 3) {\n        const newArray = this.folderNav.slice(1, -1);\n        const newDisplayfolderNav = [].concat(this.folderNav);\n        newDisplayfolderNav.splice(1, this.folderNav.length - 2, newArray);\n        return newDisplayfolderNav;\n      } else {\n        return this.folderNav;\n      }\n    },\n    storeUsagePercentage() {\n      return (this.storage_usage / this.storage_size) * 100;\n    },\n    displayFileList() {\n      return this.currentFolder.fileList;\n    },\n    searchFilter() {\n      if (this.searchInput != '') {\n        const result = this.searchFile(this.dataStorage.rootFolder, this.searchInput);\n        return result;\n      } else return [];\n    }\n  },\n  watch: {\n    currentFolder: {\n      handler(newVal, oldVal) {\n        if (oldVal && !this.preventRecord) {\n          if (\n            newVal.id == 'root' ||\n            newVal.id == 'trash' ||\n            newVal.id == 'search' ||\n            newVal.id == 'star'\n          ) {\n            this.folderNav = [];\n            this.folderNav.push(newVal);\n          } else {\n            //將資料夾路徑紀錄至folderNav\n            this.folderNav.push(newVal);\n          }\n          if (newVal.editable) {\n            this.editableFolder = true;\n          } else {\n            this.editableFolder = false;\n          }\n        }\n        if (\n          newVal.id == 'root' ||\n          newVal.id == 'trash' ||\n          newVal.id == 'search' ||\n          newVal.id == 'star'\n        ) {\n          if (oldVal) {\n            this.lastSection = this.currentSection;\n          }\n          this.currentSection = newVal.id;\n        }\n        this.$nextTick(() => {\n          if (this.lastSection) {\n            $('.table_wrapper').removeClass(this.lastSection);\n          }\n          $('.table_wrapper').addClass(this.currentSection);\n        });\n      }\n    },\n    searchFilter(newVal) {\n      const result = {\n        id: 'search',\n        name: '搜尋結果',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: newVal,\n        path: ''\n      };\n      this.currentFolder = result;\n      if (this.searchInput == '') {\n        this.currentFolder = this.dataStorage.rootFolder;\n      }\n    }\n  },\n  methods: {\n    searchFile(folder, searchInput) {\n      const result = [];\n      const filter = folder.fileList.filter(item => item.name.includes(searchInput));\n      filter.forEach(item => {\n        result.push(item);\n      });\n      const childrenFolder = folder.fileList.filter(item => item.fileType == 'folder');\n      //是否有下一層\n      if (childrenFolder.length > 0) {\n        childrenFolder.forEach(item => {\n          //回傳結果再push進result\n          this.searchFile(item, searchInput).forEach(item => {\n            result.push(item);\n          });\n        });\n      }\n      return result;\n    },\n    filterStarFile(folder) {\n      const result = [];\n      const filter = folder.fileList.filter(item => item.isStar === true);\n      filter.forEach(item => {\n        result.push(item);\n      });\n      const childrenFolder = folder.fileList.filter(item => item.fileType == 'folder');\n      //是否有下一層\n      if (childrenFolder.length > 0) {\n        childrenFolder.forEach(item => {\n          //回傳結果再push進result\n          this.filterStarFile(item).forEach(item => {\n            result.push(item);\n          });\n        });\n      }\n      return result;\n    },\n    handleClickOutside(e, el) {\n      const elName = el.getAttribute('el-name');\n      this[`${elName}Visible`] = false;\n    },\n    handleListItemDblClick(item) {\n      if (item.isInTrash) return;\n      if (item.fileType === 'folder') {\n        this.currentFolder = item;\n      } else {\n        //TODO 待新增檔案預覽功能\n      }\n    },\n    handleNavToFolder(target) {\n      if (target === this.currentFolder) return;\n      //找到物件nav index 刪除它後面紀錄\n      const targetIndex = this.folderNav.findIndex(item => item.id == target.id);\n      this.folderNav.splice(targetIndex);\n      //防止watch時把此動作記錄下來\n      this.preventRecord = true;\n      this.currentFolder = target;\n      this.preventRecord = false;\n    },\n    createFolder(name = '新文件夾') {\n      this.sidebarDropdownVisible = false;\n      const newFolder = {\n        id: this._creatUuid(),\n        name,\n        editable: true,\n        isStar: false,\n        modifiedTime: new Date().getTime(),\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: [],\n        path: this.currentFolder.path + '/' + this.currentFolder.id\n      };\n      this.currentFolder.fileList.push(newFolder);\n      //save to local\n      this.saveToLocalStorage();\n      this.newFolderName = '新文件夾';\n    },\n    //拖曳開始，設定目前拖曳中元素\n    dragStart(e, item) {\n      if (!this.currentFolder.editable) return;\n      this.isDraggingItem = item;\n      $('.table_wrapper').addClass('draggedTable');\n    },\n\n    //拖曳結束，清除拖曳及目標元素\n    dragEnd(e, item) {\n      this.isDraggingItem = null;\n      this.dragoverItem = null;\n      $('.table_wrapper').removeClass('draggedTable');\n    },\n    //設定目前拖曳目標\n    dragOver(targetElem) {\n      if (!this.currentFolder.editable) return;\n      if (\n        !this.dragoverItem &&\n        !targetElem.fileList.includes(this.isDraggingItem) &&\n        targetElem != this.isDraggingItem\n      ) {\n        this.dragoverItem = targetElem;\n      }\n    },\n    //若拖曳離開目前目標元素，則將目標元素設定為null\n    dragLeave() {\n      if (!this.currentFolder.editable) return;\n      this.dragoverItem = null;\n    },\n    //拖曳檔案被移動至目標元素中\n    drop(e, targetElem) {\n      if (!this.currentFolder.editable) return;\n      let srcItem = this.isDraggingItem;\n      let targetItem = this.dragoverItem;\n      //判斷是否為Drive上既有檔案，若true則進行搬移\n      if (srcItem) {\n        //若拖曳檔案與目標檔案相同則return\n        if (srcItem == targetItem || !targetItem) return;\n        else this.moveDriveFile(srcItem, targetItem);\n        targetItem = null;\n        return;\n      }\n      //判斷是否為Drive上既有檔案，若false則將檔案存至local並將檔案資訊加入隸屬檔案夾物件\n      this.handleUploadFile(e.dataTransfer.files, targetElem);\n      this.dragoverItem = null;\n    },\n    uploadByInput(e) {\n      if (!this.currentFolder.editable) return;\n      this.handleUploadFile(e.target.files, this.currentFolder);\n      this.sidebarDropdownVisible = false;\n    },\n    //處理上傳檔案\n    handleUploadFile(file, targetFolder) {\n      for (let i = 0; i < file.length; i++) {\n        const receiveFile = file[i];\n        if (receiveFile.type == '') {\n          alert(`「${receiveFile.name}」格式錯誤，目前暫不支援上傳此種格式。`);\n          return;\n        }\n        if (receiveFile.size > 3890704) {\n          alert(\n            `「${receiveFile.name}」檔案太大囉，由於是存入localStorage，建議測試檔案小於3.8MB。`\n          );\n          return;\n        }\n        this.convertFile(receiveFile)\n          .then(data => {\n            const fileId = this._creatUuid();\n            const fileName = receiveFile.name;\n            const newFile = {\n              id: fileId,\n              name: fileName,\n              isStar: false,\n              modifiedTime: receiveFile.lastModified,\n              size: receiveFile.size,\n              ownerId: 'me',\n              fileType: this.checkFileType(receiveFile.type),\n              dataURL: data\n            };\n            targetFolder.fileList.push(newFile);\n            this.saveToLocal(data, fileId, fileName);\n            this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n            //save to local\n            this.saveToLocalStorage();\n          })\n          .catch(err => {\n            console.log('err', err);\n          });\n      }\n    },\n    //Drive檔案搬移\n    moveDriveFile(srcItem, targetItem) {\n      if (srcItem.fileType != 'folder' && targetItem.fileType == 'folder') {\n        const indexOfItem = this.currentFolder.fileList.indexOf(srcItem);\n        targetItem.fileList.push(srcItem);\n        this.currentFolder.fileList.splice(indexOfItem, 1);\n        //save to local\n        this.saveToLocalStorage();\n      } else if (srcItem.fileType == 'folder' && targetItem.fileType == 'folder') {\n        const indexInList = this.currentFolder.fileList.indexOf(srcItem);\n        //加入\n        targetItem.fileList.push(srcItem);\n        //移出\n        this.currentFolder.fileList.splice(indexInList, 1);\n        //save to local\n        this.saveToLocalStorage();\n      }\n    },\n    checkFileType(fileType) {\n      if (fileType.includes('image')) return 'image';\n      if (\n        fileType.includes('msword') ||\n        fileType.includes('application/vnd.openxmlformats-officedocument.wordprocessingml.document')\n      )\n        return 'msword';\n      if (fileType.includes('pdf')) return 'pdf';\n      else return 'default';\n    },\n    convertFile(file) {\n      return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result);\n        };\n        reader.onerror = () => {\n          reject(reader.error);\n        };\n        reader.readAsDataURL(file);\n      });\n    },\n    saveToLocal(data, fileId, fileName) {\n      const newFile = { data, fileId, fileName };\n      const stringData = JSON.stringify(newFile);\n      localStorage.setItem(fileId, stringData);\n    },\n    download(item = this.rightClickItem) {\n      if (this.currentSection == 'trash') return;\n      if (item.fileType == 'folder') return;\n      const decodeData = JSON.parse(localStorage.getItem(item.id));\n      var a = document.createElement('a');\n      a.href = decodeData.data;\n      a.setAttribute('download', item.name);\n      a.click();\n    },\n    activeUploadInput() {\n      if (this.currentSection != 'root') {\n        this.currentFolder = this.dataStorage.rootFolder;\n      }\n      this.$refs.fileInput.click();\n    },\n    moveToTrash(file = this.rightClickItem) {\n      if (this.currentSection == 'trash') return;\n      file.isInTrash = true;\n      this.dataStorage.trash.fileList.push(file);\n      const delFile = this.currentFolder.fileList.find(item => (item.id = file.id));\n      const delFileIndex = this.currentFolder.fileList.indexOf(delFile);\n      this.currentFolder.fileList.splice(delFileIndex, 1);\n      //save to local\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n    },\n    deleteFile(file = this.rightClickItem) {\n      const delFileIndex = this.dataStorage.trash.fileList.indexOf(file);\n      this.dataStorage.trash.fileList.splice(delFileIndex, 1);\n      //save to local\n      this.saveToLocalTrash();\n    },\n    recycleItem(item = this.rightClickItem) {\n      if (this.currentSection != 'trash') return;\n      ///讀取path\n      const pathArray = item.path.split('/');\n      //刪除根目錄及前方空白\n      pathArray.splice(0, 2);\n      var targetFolder;\n      if (pathArray.length == 0) {\n        //檔案於根目錄\n        targetFolder = this.dataStorage.rootFolder;\n      } else {\n        //檔案於子目錄\n        var current = this.dataStorage.rootFolder;\n        for (let i = 0; i < pathArray.length; i++) {\n          const childFolder = current.fileList.find(item => item.id == pathArray[i]);\n          current = childFolder;\n        }\n        targetFolder = current;\n      }\n      item.isInTrash = false;\n      targetFolder.fileList.push(item);\n      const indexOfDelItem = this.dataStorage.trash.fileList.indexOf(item);\n      this.dataStorage.trash.fileList.splice(indexOfDelItem, 1);\n      //save to local\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n    },\n    _creatUuid() {\n      var d = Date.now();\n      if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now(); //use high-precision timer if available\n      }\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n      });\n    },\n    fileContextMenu(item) {\n      this.rightClickItem = item;\n    },\n    addStar(item = this.rightClickItem) {\n      item.isStar = !item.isStar;\n      this.saveToLocalStorage();\n      this.saveToLocalTrash();\n      if (item.isStar) {\n        this.dataStorage.star.fileList.push(item);\n      } else {\n        const target = this.dataStorage.star.fileList;\n        const findObj = target.find(obj => obj.id == item.id);\n        const index = target.indexOf(findObj);\n        target.splice(index, 1);\n      }\n    },\n    starPage() {\n      this.currentFolder = this.dataStorage.star;\n    },\n    saveToLocalStorage() {\n      //save to LocalStorage\n      const storeData = JSON.stringify(this.dataStorage.rootFolder.fileList);\n      localStorage.setItem('myStorage', storeData);\n    },\n    saveToLocalTrash() {\n      //save to Local Trash\n      const trashData = JSON.stringify(this.dataStorage.trash.fileList);\n      localStorage.setItem('myTrash', trashData);\n    }\n  },\n  filters: {\n    timeFormat(timestamp) {\n      let date = new Date(timestamp);\n      let year = date.getFullYear();\n      let month = date.getMonth() + 1;\n      let day = date.getDate();\n      let hours = '0' + date.getHours();\n      let minutes = '0' + date.getMinutes();\n      let seconds = '0' + date.getSeconds();\n      return `${year}-${month}-${day} ${hours.substr(-2)}:${minutes.substr(-2)}:${seconds.substr(\n        -2\n      )}`;\n    },\n    sizeFormat(bytes, decimals = 1) {\n      if (isNaN(bytes) || !bytes) return '';\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const dm = decimals < 0 ? 0 : decimals;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n  },\n  created() {\n    this.currentFolder = this.dataStorage.rootFolder;\n    this.folderNav.push(this.dataStorage.rootFolder);\n    this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n    const starFile = this.filterStarFile(this.dataStorage.rootFolder);\n    this.dataStorage.star.fileList = starFile;\n    const getStoreData = JSON.parse(localStorage.getItem('myStorage')) || [\n      {\n        id: '#1-f',\n        name: '預設資料夾',\n        editable: true,\n        isStar: false,\n        modifiedTime: 1598047432044,\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        childrenFolder: [],\n        fileList: [],\n        path: '/root'\n      }\n    ];\n    console.log(getStoreData);\n    const getTrashData = JSON.parse(localStorage.getItem('myTrash')) || [];\n    console.log(getTrashData);\n    this.dataStorage.rootFolder.fileList = getStoreData;\n    this.dataStorage.trash.fileList = getTrashData;\n  },\n  mounted() {},\n  directives: {\n    'click-outside': {\n      bind: function (el, binding, vnode) {\n        el.clickOutsideEvent = function (event) {\n          const elName = el.getAttribute('el-name');\n          if (\n            !(el == event.target || el.contains(event.target)) &&\n            elName != event.target.getAttribute('bind-el')\n          ) {\n            vnode.context[binding.expression](event, el);\n          }\n        };\n        document.body.addEventListener('click', el.clickOutsideEvent);\n        document.body.addEventListener('contextmenu', el.clickOutsideEvent);\n      },\n      unbind: function (el) {\n        document.body.removeEventListener('click', el.clickOutsideEvent);\n        document.body.removeEventListener('contextmenu', el.clickOutsideEvent);\n      }\n    }\n  }\n});\n\n//雲端硬碟 右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root',\n    items: {\n      upload: {\n        name: '上傳檔案',\n        callback() {\n          vm.activeUploadInput();\n        }\n      },\n      createNewFolder: {\n        name: '新增資料夾',\n        callback() {\n          $('#newFolderModal').modal('show');\n        }\n      }\n    }\n  });\n});\n\n//檔案夾右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root .folder_type',\n    items: {\n      // share: { name: '共享' },\n      // download: {\n      //   name: '下載',\n      //   callback() {\n      //     vm.download();\n      //   }\n      // },\n      star: {\n        name: '標示星號',\n        callback() {\n          vm.addStar();\n        }\n      },\n      moveToTrash: {\n        name: '移至垃圾桶',\n        callback() {\n          vm.moveToTrash();\n        }\n      }\n    }\n  });\n});\n//檔案右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root .doc_type',\n    items: {\n      download: {\n        name: '下載',\n        callback() {\n          vm.download();\n        }\n      },\n      star: {\n        name: '標示星號',\n        callback() {\n          vm.addStar();\n        }\n      },\n      moveToTrash: {\n        name: '移至垃圾桶',\n        callback() {\n          vm.moveToTrash();\n        }\n      }\n    }\n  });\n});\n\n//垃圾桶檔案及檔案夾右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.trash .doc_type , .table_contextmenu.trash .folder_type',\n    items: {\n      download: {\n        name: '還原',\n        callback() {\n          vm.recycleItem();\n        },\n        name: '永久刪除',\n        callback() {\n          $('#deleteModal').modal('show');\n        }\n      }\n    }\n  });\n});\n"]}