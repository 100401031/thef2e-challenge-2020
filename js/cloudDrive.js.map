{"version":3,"sources":["cloudDrive.js"],"names":["vm","Vue","el","data","sidebarDropdownVisible","fileNavDropdownVisible","storage_usage","searchInput","storage_size","searchResult","dataStorage","rootFolder","id","name","editable","modifiedTime","ownerId","fileType","fileList","size","isStar","childrenFolder","path","trash","star","currentSection","currentFolder","starFileId","lastSection","preFolderNav","folderNav","preventRecord","rightClickItem","isDraggingItem","newFolderName","length","newArray","this","slice","newDisplayfolderNav","concat","displayfolderNav","splice","storeUsagePercentage","displayFileList","searchFilter","watch","handler","newVal","oldVal","_this","push","editableFolder","$nextTick","$","removeClass","addClass","result","methods","searchFile","folder","_this2","includes","forEach","item","filter","filterStarFile","_this3","handleClickOutside","e","getAttribute","elName","handleListItemDblClick","handleNavToFolder","target","targetIndex","findIndex","createFolder","arguments","undefined","newFolder","_creatUuid","JSON","localStorage","storeData","dragStart","dragOver","stringify","targetElem","dragoverItem","dragLeave","drop","targetItem","srcItem","moveDriveFile","handleUploadFile","dataTransfer","files","uploadByInput","file","i","_ret","receiveFile","type","alert","v","_this4","convertFile","then","fileName","newFile","fileId","lastModified","checkFileType","dataURL","targetFolder","setItem","catch","err","_loop","_typeof","indexInList","indexOf","Promise","resolve","reject","indexOfItem","FileReader","reader","saveToLocal","stringData","parse","href","a","setAttribute","click","activeUploadInput","fileInput","moveToTrash","delFile","trashData","onerror","find","readAsDataURL","delFileIndex","deleteFile","download","recycleItem","decodeData","pathArray","split","$refs","current","_loop2","indexOfDelItem","Date","now","performance","d","replace","c","Math","random","r","toString","fileContextMenu","addStar","index","findObj","starPage","timeFormat","timestamp","date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","getMinutes","seconds","getSeconds","substr","minutes","sizeFormat","decimals","isNaN","bytes","floor","log","pow","toFixed","dm","created","starFile","getStoreData","getItem","getTrashData","mounted","click-outside","bind","binding","vnode","clickOutsideEvent","event","contains","expression","document","body","addEventListener","removeEventListener","contextMenu","items","upload","modal","console","callback","selector","createNewFolder","_download","_defineProperty"],"mappings":"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","file":"cloudDrive.js","sourcesContent":["var vm;\nvm = new Vue({\n  el: '#app',\n  data: {\n    sidebarDropdownVisible: false,\n    fileNavDropdownVisible: false,\n    storage_size: 5000000,\n    storage_usage: 0,\n    searchInput: '',\n    searchResult: [],\n    dataStorage: {\n      rootFolder: {\n        id: 'root',\n        name: '我的雲端硬碟',\n        editable: true,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: [\n          {\n            id: '#1-f',\n            name: '預設資料夾',\n            editable: true,\n            isStar: false,\n            modifiedTime: 1598047432044,\n            size: '',\n            ownerId: 'me',\n            fileType: 'folder',\n            childrenFolder: [],\n            fileList: [],\n            path: '/root'\n          }\n        ],\n        path: ''\n      },\n      trash: {\n        id: 'trash',\n        name: '垃圾桶',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: []\n      },\n      star: {\n        id: 'star',\n        name: '已加星號',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: []\n      }\n    },\n    starFileId: [],\n    lastSection: null,\n    currentSection: null,\n    currentFolder: null,\n    preFolderNav: [],\n    folderNav: [],\n    preventRecord: false,\n    dragoverItem: null,\n    rightClickItem: null,\n    isDraggingItem: null,\n    newFolderName: '新文件夾'\n  },\n  computed: {\n    displayfolderNav() {\n      if (this.folderNav.length > 3) {\n        const newArray = this.folderNav.slice(1, -1);\n        const newDisplayfolderNav = [].concat(this.folderNav);\n        newDisplayfolderNav.splice(1, this.folderNav.length - 2, newArray);\n        return newDisplayfolderNav;\n      } else {\n        return this.folderNav;\n      }\n    },\n    storeUsagePercentage() {\n      return (this.storage_usage / this.storage_size) * 100;\n    },\n    displayFileList() {\n      return this.currentFolder.fileList;\n    },\n    searchFilter() {\n      if (this.searchInput != '') {\n        const result = this.searchFile(this.dataStorage.rootFolder, this.searchInput);\n        return result;\n      } else return [];\n    }\n  },\n  watch: {\n    currentFolder: {\n      handler(newVal, oldVal) {\n        if (oldVal && !this.preventRecord) {\n          if (\n            newVal.id == 'root' ||\n            newVal.id == 'trash' ||\n            newVal.id == 'search' ||\n            newVal.id == 'star'\n          ) {\n            this.folderNav = [];\n            this.folderNav.push(newVal);\n          } else {\n            //將資料夾路徑紀錄至folderNav\n            this.folderNav.push(newVal);\n          }\n          if (newVal.editable) {\n            this.editableFolder = true;\n          } else {\n            this.editableFolder = false;\n          }\n        }\n        if (\n          newVal.id == 'root' ||\n          newVal.id == 'trash' ||\n          newVal.id == 'search' ||\n          newVal.id == 'star'\n        ) {\n          if (oldVal) {\n            this.lastSection = this.currentSection;\n          }\n          this.currentSection = newVal.id;\n        }\n        this.$nextTick(() => {\n          if (this.lastSection) {\n            $('.table_wrapper').removeClass(this.lastSection);\n          }\n          $('.table_wrapper').addClass(this.currentSection);\n        });\n      }\n    },\n    searchFilter(newVal) {\n      const result = {\n        id: 'search',\n        name: '搜尋結果',\n        editable: false,\n        modifiedTime: '',\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: newVal,\n        path: ''\n      };\n      this.currentFolder = result;\n      if (this.searchInput == '') {\n        this.currentFolder = this.dataStorage.rootFolder;\n      }\n    }\n  },\n  methods: {\n    searchFile(folder, searchInput) {\n      const result = [];\n      const filter = folder.fileList.filter(item => item.name.includes(searchInput));\n      filter.forEach(item => {\n        result.push(item);\n      });\n      const childrenFolder = folder.fileList.filter(item => item.fileType == 'folder');\n      //是否有下一層\n      if (childrenFolder.length > 0) {\n        childrenFolder.forEach(item => {\n          //回傳結果再push進result\n          this.searchFile(item, searchInput).forEach(item => {\n            result.push(item);\n          });\n        });\n      }\n      return result;\n    },\n    filterStarFile(folder) {\n      const result = [];\n      const filter = folder.fileList.filter(item => item.isStar === true);\n      filter.forEach(item => {\n        result.push(item);\n      });\n      const childrenFolder = folder.fileList.filter(item => item.fileType == 'folder');\n      //是否有下一層\n      if (childrenFolder.length > 0) {\n        childrenFolder.forEach(item => {\n          //回傳結果再push進result\n          this.filterStarFile(item).forEach(item => {\n            result.push(item);\n          });\n        });\n      }\n      return result;\n    },\n    handleClickOutside(e, el) {\n      const elName = el.getAttribute('el-name');\n      this[`${elName}Visible`] = false;\n    },\n    handleListItemDblClick(item) {\n      if (item.isInTrash) return;\n      if (item.fileType === 'folder') {\n        this.currentFolder = item;\n      } else {\n        //TODO 待新增檔案預覽功能\n      }\n    },\n    handleNavToFolder(target) {\n      if (target === this.currentFolder) return;\n      //找到物件nav index 刪除它後面紀錄\n      const targetIndex = this.folderNav.findIndex(item => item.id == target.id);\n      this.folderNav.splice(targetIndex);\n      //防止watch時把此動作記錄下來\n      this.preventRecord = true;\n      this.currentFolder = target;\n      this.preventRecord = false;\n    },\n    createFolder(name = '新文件夾') {\n      this.sidebarDropdownVisible = false;\n      const newFolder = {\n        id: this._creatUuid(),\n        name,\n        editable: true,\n        isStar: false,\n        modifiedTime: new Date().getTime(),\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        fileList: [],\n        path: this.currentFolder.path + '/' + this.currentFolder.id\n      };\n      this.currentFolder.fileList.push(newFolder);\n      const storeData = JSON.stringify(this.dataStorage.rootFolder.fileList);\n      localStorage.setItem('myStorage', storeData);\n      this.newFolderName = '新文件夾';\n    },\n    //拖曳開始，設定目前拖曳中元素\n    dragStart(e, item) {\n      if (!this.currentFolder.editable) return;\n      this.isDraggingItem = item;\n      $('.table_wrapper').addClass('draggedTable');\n    },\n\n    //拖曳結束，清除拖曳及目標元素\n    dragEnd(e, item) {\n      this.isDraggingItem = null;\n      this.dragoverItem = null;\n      $('.table_wrapper').removeClass('draggedTable');\n    },\n    //設定目前拖曳目標\n    dragOver(targetElem) {\n      if (!this.currentFolder.editable) return;\n      if (\n        !this.dragoverItem &&\n        !targetElem.fileList.includes(this.isDraggingItem) &&\n        targetElem != this.isDraggingItem\n      ) {\n        this.dragoverItem = targetElem;\n      }\n    },\n    //若拖曳離開目前目標元素，則將目標元素設定為null\n    dragLeave() {\n      if (!this.currentFolder.editable) return;\n      this.dragoverItem = null;\n    },\n    //拖曳檔案被移動至目標元素中\n    drop(e, targetElem) {\n      if (!this.currentFolder.editable) return;\n      let srcItem = this.isDraggingItem;\n      let targetItem = this.dragoverItem;\n      //判斷是否為Drive上既有檔案，若true則進行搬移\n      if (srcItem) {\n        //若拖曳檔案與目標檔案相同則return\n        if (srcItem == targetItem || !targetItem) return;\n        else this.moveDriveFile(srcItem, targetItem);\n        targetItem = null;\n        return;\n      }\n      //判斷是否為Drive上既有檔案，若false則將檔案存至local並將檔案資訊加入隸屬檔案夾物件\n      this.handleUploadFile(e.dataTransfer.files, targetElem);\n      this.dragoverItem = null;\n    },\n    uploadByInput(e) {\n      if (!this.currentFolder.editable) return;\n      this.handleUploadFile(e.target.files, this.currentFolder);\n      this.sidebarDropdownVisible = false;\n    },\n    //處理上傳檔案\n    handleUploadFile(file, targetFolder) {\n      for (let i = 0; i < file.length; i++) {\n        const receiveFile = file[i];\n        if (receiveFile.type == '') {\n          alert(`「${receiveFile.name}」格式錯誤，目前暫不支援上傳此種格式。`);\n          return;\n        }\n        if (receiveFile.size > 3890704) {\n          alert(\n            `「${receiveFile.name}」檔案太大囉，由於是存入localStorage，建議測試檔案小於3.8MB。`\n          );\n          return;\n        }\n        this.convertFile(receiveFile)\n          .then(data => {\n            const fileId = this._creatUuid();\n            const fileName = receiveFile.name;\n            const newFile = {\n              id: fileId,\n              name: fileName,\n              isStar: false,\n              modifiedTime: receiveFile.lastModified,\n              size: receiveFile.size,\n              ownerId: 'me',\n              fileType: this.checkFileType(receiveFile.type),\n              dataURL: data\n            };\n            targetFolder.fileList.push(newFile);\n            this.saveToLocal(data, fileId, fileName);\n            this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n            const storeData = JSON.stringify(this.dataStorage.rootFolder.fileList);\n            localStorage.setItem('myStorage', storeData);\n          })\n          .catch(err => {\n            console.log('err', err);\n          });\n      }\n    },\n    //Drive檔案搬移\n    moveDriveFile(srcItem, targetItem) {\n      if (srcItem.fileType != 'folder' && targetItem.fileType == 'folder') {\n        const indexOfItem = this.currentFolder.fileList.indexOf(srcItem);\n        targetItem.fileList.push(srcItem);\n        this.currentFolder.fileList.splice(indexOfItem, 1);\n        //save to local\n        const storeData = JSON.stringify(this.dataStorage.rootFolder.fileList);\n        localStorage.setItem('myStorage', storeData);\n      } else if (srcItem.fileType == 'folder' && targetItem.fileType == 'folder') {\n        const indexInList = this.currentFolder.fileList.indexOf(srcItem);\n        //加入\n        targetItem.fileList.push(srcItem);\n        //移出\n        this.currentFolder.fileList.splice(indexInList, 1);\n        //save to local\n        const storeData = JSON.stringify(this.dataStorage.rootFolder.fileList);\n        localStorage.setItem('myStorage', storeData);\n      }\n    },\n    checkFileType(fileType) {\n      if (fileType.includes('image')) return 'image';\n      if (\n        fileType.includes('msword') ||\n        fileType.includes('application/vnd.openxmlformats-officedocument.wordprocessingml.document')\n      )\n        return 'msword';\n      if (fileType.includes('pdf')) return 'pdf';\n      else return 'default';\n    },\n    convertFile(file) {\n      return new Promise((resolve, reject) => {\n        let reader = new FileReader();\n        reader.onload = () => {\n          resolve(reader.result);\n        };\n        reader.onerror = () => {\n          reject(reader.error);\n        };\n        reader.readAsDataURL(file);\n      });\n    },\n    saveToLocal(data, fileId, fileName) {\n      const newFile = { data, fileId, fileName };\n      const stringData = JSON.stringify(newFile);\n      localStorage.setItem(fileId, stringData);\n    },\n    download(item = this.rightClickItem) {\n      if (this.currentSection == 'trash') return;\n      if (item.fileType == 'folder') return;\n      const decodeData = JSON.parse(localStorage.getItem(item.id));\n      var a = document.createElement('a');\n      a.href = decodeData.data;\n      a.setAttribute('download', item.name);\n      a.click();\n    },\n    activeUploadInput() {\n      if (this.currentSection != 'root') {\n        this.currentFolder = this.dataStorage.rootFolder;\n      }\n      this.$refs.fileInput.click();\n    },\n    moveToTrash(file = this.rightClickItem) {\n      if (this.currentSection == 'trash') return;\n      file.isInTrash = true;\n      this.dataStorage.trash.fileList.push(file);\n      const delFile = this.currentFolder.fileList.find(item => (item.id = file.id));\n      const delFileIndex = this.currentFolder.fileList.indexOf(delFile);\n      this.currentFolder.fileList.splice(delFileIndex, 1);\n      //Save to localStorage\n      const storeData = JSON.stringify(this.dataStorage.rootFolder.fileList);\n      localStorage.setItem('myStorage', storeData);\n      const trashData = JSON.stringify(this.dataStorage.trash.fileList);\n      localStorage.setItem('myTrash', trashData);\n    },\n    deleteFile(file = this.rightClickItem) {\n      const delFileIndex = this.dataStorage.trash.fileList.indexOf(file);\n      this.dataStorage.trash.fileList.splice(delFileIndex, 1);\n      //save to local\n      const trashData = JSON.stringify(this.dataStorage.trash.fileList);\n      localStorage.setItem('myTrash', trashData);\n    },\n    recycleItem(item = this.rightClickItem) {\n      if (this.currentSection != 'trash') return;\n      ///讀取path\n      const pathArray = item.path.split('/');\n      //刪除根目錄及前方空白\n      pathArray.splice(0, 2);\n      var targetFolder;\n      if (pathArray.length == 0) {\n        //檔案於根目錄\n        targetFolder = this.dataStorage.rootFolder;\n      } else {\n        //檔案於子目錄\n        var current = this.dataStorage.rootFolder;\n        for (let i = 0; i < pathArray.length; i++) {\n          const childFolder = current.fileList.find(item => item.id == pathArray[i]);\n          current = childFolder;\n        }\n        targetFolder = current;\n      }\n      item.isInTrash = false;\n      targetFolder.fileList.push(item);\n      const indexOfDelItem = this.dataStorage.trash.fileList.indexOf(item);\n      this.dataStorage.trash.fileList.splice(indexOfDelItem, 1);\n      //Save to localStorage\n      const storeData = JSON.stringify(this.dataStorage.rootFolder.fileList);\n      localStorage.setItem('myStorage', storeData);\n      const trashData = JSON.stringify(this.dataStorage.trash.fileList);\n      localStorage.setItem('myTrash', trashData);\n    },\n    _creatUuid() {\n      var d = Date.now();\n      if (typeof performance !== 'undefined' && typeof performance.now === 'function') {\n        d += performance.now(); //use high-precision timer if available\n      }\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n      });\n    },\n    fileContextMenu(item) {\n      this.rightClickItem = item;\n    },\n    addStar(item = this.rightClickItem) {\n      item.isStar = !item.isStar;\n      if (item.isStar) {\n        this.dataStorage.star.fileList.push(item);\n      } else {\n        const target = this.dataStorage.star.fileList;\n        const findObj = target.find(obj => obj.id == item.id);\n        const index = target.indexOf(findObj);\n        target.splice(index, 1);\n      }\n    },\n    starPage() {\n      this.currentFolder = this.dataStorage.star;\n    }\n  },\n  filters: {\n    timeFormat(timestamp) {\n      let date = new Date(timestamp);\n      let year = date.getFullYear();\n      let month = date.getMonth() + 1;\n      let day = date.getDate();\n      let hours = '0' + date.getHours();\n      let minutes = '0' + date.getMinutes();\n      let seconds = '0' + date.getSeconds();\n      return `${year}-${month}-${day} ${hours.substr(-2)}:${minutes.substr(-2)}:${seconds.substr(\n        -2\n      )}`;\n    },\n    sizeFormat(bytes, decimals = 1) {\n      if (isNaN(bytes) || !bytes) return '';\n      if (bytes === 0) return '0 Bytes';\n      const k = 1024;\n      const dm = decimals < 0 ? 0 : decimals;\n      const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      const i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n  },\n  created() {\n    this.currentFolder = this.dataStorage.rootFolder;\n    this.folderNav.push(this.dataStorage.rootFolder);\n    this.storage_usage = JSON.stringify(localStorage).length * 0.77;\n    const starFile = this.filterStarFile(this.dataStorage.rootFolder);\n    this.dataStorage.star.fileList = starFile;\n    const getStoreData = JSON.parse(localStorage.getItem('myStorage')) || [\n      {\n        id: '#1-f',\n        name: '預設資料夾',\n        editable: true,\n        isStar: false,\n        modifiedTime: 1598047432044,\n        size: '',\n        ownerId: 'me',\n        fileType: 'folder',\n        childrenFolder: [],\n        fileList: [],\n        path: '/root'\n      }\n    ];\n    console.log(getStoreData);\n    const getTrashData = JSON.parse(localStorage.getItem('myTrash')) || [];\n    console.log(getTrashData);\n    this.dataStorage.rootFolder.fileList = getStoreData;\n    this.dataStorage.trash.fileList = getTrashData;\n  },\n  mounted() {},\n  directives: {\n    'click-outside': {\n      bind: function (el, binding, vnode) {\n        el.clickOutsideEvent = function (event) {\n          const elName = el.getAttribute('el-name');\n          if (\n            !(el == event.target || el.contains(event.target)) &&\n            elName != event.target.getAttribute('bind-el')\n          ) {\n            vnode.context[binding.expression](event, el);\n          }\n        };\n        document.body.addEventListener('click', el.clickOutsideEvent);\n        document.body.addEventListener('contextmenu', el.clickOutsideEvent);\n      },\n      unbind: function (el) {\n        document.body.removeEventListener('click', el.clickOutsideEvent);\n        document.body.removeEventListener('contextmenu', el.clickOutsideEvent);\n      }\n    }\n  }\n});\n\n//雲端硬碟 右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root',\n    items: {\n      upload: {\n        name: '上傳檔案',\n        callback() {\n          vm.activeUploadInput();\n        }\n      },\n      createNewFolder: {\n        name: '新增資料夾',\n        callback() {\n          $('#newFolderModal').modal('show');\n        }\n      }\n    }\n  });\n});\n\n//檔案夾右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root .folder_type',\n    items: {\n      // share: { name: '共享' },\n      // download: {\n      //   name: '下載',\n      //   callback() {\n      //     vm.download();\n      //   }\n      // },\n      star: {\n        name: '標示星號',\n        callback() {\n          vm.addStar();\n        }\n      },\n      moveToTrash: {\n        name: '移至垃圾桶',\n        callback() {\n          vm.moveToTrash();\n        }\n      }\n    }\n  });\n});\n//檔案右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.root .doc_type',\n    items: {\n      download: {\n        name: '下載',\n        callback() {\n          vm.download();\n        }\n      },\n      star: {\n        name: '標示星號',\n        callback() {\n          vm.addStar();\n        }\n      },\n      moveToTrash: {\n        name: '移至垃圾桶',\n        callback() {\n          vm.moveToTrash();\n        }\n      }\n    }\n  });\n});\n\n//垃圾桶檔案及檔案夾右鍵選單\n$(function () {\n  $.contextMenu({\n    selector: '.table_contextmenu.trash .doc_type , .table_contextmenu.trash .folder_type',\n    items: {\n      download: {\n        name: '還原',\n        callback() {\n          vm.recycleItem();\n        },\n        name: '永久刪除',\n        callback() {\n          $('#deleteModal').modal('show');\n        }\n      }\n    }\n  });\n});\n"]}